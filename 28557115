<!doctype html>
<html lang="zh" data-hairline="true" data-theme="light"><head><meta charset="utf-8"/><title data-react-helmet="true">怎样用通俗的语言解释REST，以及RESTful？ - 知乎</title><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1"/><meta name="renderer" content="webkit"/><meta name="force-rendering" content="webkit"/><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/><meta name="google-site-verification" content="FTeR0c8arOPKh8c5DYh_9uu98_zJbaWw53J-Sch9MTg"/><meta data-react-helmet="true" name="apple-itunes-app" content="app-id=432274380, app-argument=zhihu://questions/28557115"/><link rel="shortcut icon" type="image/x-icon" href="https://static.zhihu.com/static/favicon.ico"/><link rel="dns-prefetch" href="//static.zhimg.com"/><link rel="dns-prefetch" href="//pic1.zhimg.com"/><link rel="dns-prefetch" href="//pic2.zhimg.com"/><link rel="dns-prefetch" href="//pic3.zhimg.com"/><link rel="dns-prefetch" href="//pic4.zhimg.com"/><link href="https://static.zhihu.com/heifetz/main.app.d201f66b0a45acac5d9e.css" rel="stylesheet"/></head><body class="Entry-body"><div id="root"><div data-zop-userToken="{}" data-reactroot="" data-reactid="1" data-react-checksum="1006425482"><!-- react-empty: 2 --><div class="LoadingBar" data-reactid="3"></div><!-- react-empty: 4 --><div data-reactid="5"><header role="banner" class="Sticky AppHeader" data-za-module="TopNavBar" data-reactid="6"><!-- react-empty: 7 --><div class="AppHeader-inner" data-reactid="8"><a href="/" aria-label="知乎" data-reactid="9"><svg viewBox="0 0 200 91" class="Icon Icon--logo" style="fill:#0f88eb;height:30px;width:64px;" width="64" height="30" aria-hidden="true" data-reactid="10"><title data-reactid="11"></title><g data-reactid="12"><path d="M53.29 80.035l7.32.002 2.41 8.24 13.128-8.24h15.477v-67.98H53.29v67.978zm7.79-60.598h22.756v53.22h-8.73l-8.718 5.473-1.587-5.46-3.72-.012v-53.22zM46.818 43.162h-16.35c.545-8.467.687-16.12.687-22.955h15.987s.615-7.05-2.68-6.97H16.807c1.09-4.1 2.46-8.332 4.1-12.708 0 0-7.523 0-10.085 6.74-1.06 2.78-4.128 13.48-9.592 24.41 1.84-.2 7.927-.37 11.512-6.94.66-1.84.785-2.08 1.605-4.54h9.02c0 3.28-.374 20.9-.526 22.95H6.51c-3.67 0-4.863 7.38-4.863 7.38H22.14C20.765 66.11 13.385 79.24 0 89.62c6.403 1.828 12.784-.29 15.937-3.094 0 0 7.182-6.53 11.12-21.64L43.92 85.18s2.473-8.402-.388-12.496c-2.37-2.788-8.768-10.33-11.496-13.064l-4.57 3.627c1.363-4.368 2.183-8.61 2.46-12.71H49.19s-.027-7.38-2.372-7.38zm128.752-.502c6.51-8.013 14.054-18.302 14.054-18.302s-5.827-4.625-8.556-1.27c-1.874 2.548-11.51 15.063-11.51 15.063l6.012 4.51zm-46.903-18.462c-2.814-2.577-8.096.667-8.096.667s12.35 17.2 12.85 17.953l6.08-4.29s-8.02-11.752-10.83-14.33zM199.99 46.5c-6.18 0-40.908.292-40.953.292v-31.56c1.503 0 3.882-.124 7.14-.376 12.773-.753 21.914-1.25 27.427-1.504 0 0 3.817-8.496-.185-10.45-.96-.37-7.24 1.43-7.24 1.43s-51.63 5.153-72.61 5.64c.5 2.756 2.38 5.336 4.93 6.11 4.16 1.087 7.09.53 15.36.277 7.76-.5 13.65-.76 17.66-.76v31.19h-41.71s.88 6.97 7.97 7.14h33.73v22.16c0 4.364-3.498 6.87-7.65 6.6-4.4.034-8.15-.36-13.027-.566.623 1.24 1.977 4.496 6.035 6.824 3.087 1.502 5.054 2.053 8.13 2.053 9.237 0 14.27-5.4 14.027-14.16V53.93h38.235c3.026 0 2.72-7.432 2.72-7.432z" fill-rule="evenodd"/></g></svg></a><nav role="navigation" class="AppHeader-nav" data-reactid="13"><a class="AppHeader-navItem" href="/" data-reactid="14">首页</a><a class="AppHeader-navItem" href="/explore" data-reactid="15">发现</a><a href="/topic" class="AppHeader-navItem" data-reactid="16">话题</a></nav><div class="SearchBar" role="search" data-reactid="17"><div class="SearchBar-toolWrapper" data-reactid="18"><form class="SearchBar-tool" data-reactid="19"><div data-reactid="20"><div class="Popover" data-reactid="21"><div class="SearchBar-input Input-wrapper Input-wrapper--grey" data-reactid="22"><input type="text" maxlength="100" value="" autocomplete="off" role="combobox" aria-expanded="false" aria-autocomplete="list" aria-activedescendant="null--1" id="null-toggle" aria-haspopup="true" aria-owns="null-content" class="Input" placeholder="搜索你感兴趣的内容…" data-reactid="23"/><div class="Input-after" data-reactid="24"><button class="Button SearchBar-searchIcon Button--primary" aria-label="搜索" type="button" data-reactid="25"><svg viewBox="0 0 16 16" class="Icon Icon--search" style="height:16px;width:16px;" width="16" height="16" aria-hidden="true" data-reactid="26"><title data-reactid="27"></title><g data-reactid="28"><path d="M12.054 10.864c.887-1.14 1.42-2.57 1.42-4.127C13.474 3.017 10.457 0 6.737 0S0 3.016 0 6.737c0 3.72 3.016 6.737 6.737 6.737 1.556 0 2.985-.533 4.127-1.42l3.103 3.104c.765.46 1.705-.37 1.19-1.19l-3.103-3.104zm-5.317.925c-2.786 0-5.053-2.267-5.053-5.053S3.95 1.684 6.737 1.684 11.79 3.95 11.79 6.737 9.522 11.79 6.736 11.79z"/></g></svg></button></div></div><!-- react-empty: 29 --></div></div></form></div></div><div class="AppHeader-userInfo" data-reactid="30"><!-- react-empty: 31 --><div class="AppHeader-profile" data-reactid="32"><div data-reactid="33"><button class="Button AppHeader-login Button--blue" type="button" data-reactid="34"><!-- react-text: 35 -->登录<!-- /react-text --></button><button class="Button Button--primary Button--blue" type="button" data-reactid="36"><!-- react-text: 37 -->加入知乎<!-- /react-text --></button></div></div></div></div></header></div><!-- react-empty: 38 --><main role="main" class="App-main" data-reactid="39"><div class="QuestionPage" itemscope="" itemtype="http://schema.org/Question" data-reactid="40"><!-- react-empty: 41 --><meta itemprop="name" content="怎样用通俗的语言解释REST，以及RESTful？" data-reactid="42"/><meta itemprop="url" content="https://www.zhihu.com/question/28557115" data-reactid="43"/><meta itemprop="keywords" content="计算机网络,RESTful,REST,网络架构" data-reactid="44"/><meta itemprop="answerCount" content="50" data-reactid="45"/><meta itemprop="commentCount" content="5" data-reactid="46"/><meta itemprop="dateCreated" content="2015-03-06T03:29:43.000Z" data-reactid="47"/><meta itemprop="dateModified" content="2017-05-09T12:35:36.000Z" data-reactid="48"/><meta itemprop="zhihu:visitsCount" data-reactid="49"/><meta itemprop="zhihu:followerCount" content="3249" data-reactid="50"/><div data-zop-question="{&quot;title&quot;:&quot;怎样用通俗的语言解释REST，以及RESTful？&quot;,&quot;topics&quot;:[{&quot;name&quot;:&quot;计算机网络&quot;,&quot;id&quot;:&quot;19572894&quot;},{&quot;name&quot;:&quot;RESTful&quot;,&quot;id&quot;:&quot;19579308&quot;},{&quot;name&quot;:&quot;REST&quot;,&quot;id&quot;:&quot;19579857&quot;},{&quot;name&quot;:&quot;网络架构&quot;,&quot;id&quot;:&quot;19582876&quot;}],&quot;id&quot;:28557115,&quot;isEditable&quot;:false}" data-reactid="51"><!-- react-empty: 52 --><div class="QuestionHeader" data-reactid="53"><div class="QuestionHeader-content" data-reactid="54"><div class="QuestionHeader-main" data-reactid="55"><div class="QuestionHeader-tags" data-reactid="56"><div class="QuestionHeader-topics" data-reactid="57"><div class="Tag QuestionTopic" data-reactid="58"><span class="Tag-content" data-reactid="59"><a class="TopicLink" href="/topic/19572894" data-reactid="60"><div class="Popover" data-reactid="61"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="62">计算机网络</div><!-- react-empty: 63 --></div></a></span></div><div class="Tag QuestionTopic" data-reactid="64"><span class="Tag-content" data-reactid="65"><a class="TopicLink" href="/topic/19579308" data-reactid="66"><div class="Popover" data-reactid="67"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="68">RESTful</div><!-- react-empty: 69 --></div></a></span></div><div class="Tag QuestionTopic" data-reactid="70"><span class="Tag-content" data-reactid="71"><a class="TopicLink" href="/topic/19579857" data-reactid="72"><div class="Popover" data-reactid="73"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="74">REST</div><!-- react-empty: 75 --></div></a></span></div><div class="Tag QuestionTopic" data-reactid="76"><span class="Tag-content" data-reactid="77"><a class="TopicLink" href="/topic/19582876" data-reactid="78"><div class="Popover" data-reactid="79"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="80">网络架构</div><!-- react-empty: 81 --></div></a></span></div></div></div><h1 class="QuestionHeader-title" data-reactid="82"><!-- react-text: 83 -->怎样用通俗的语言解释REST，以及RESTful？<!-- /react-text --></h1><div data-reactid="84"><!-- react-text: 85 --><!-- /react-text --><div class="QuestionHeader-detail" data-reactid="86"><div class="QuestionRichText QuestionRichText--expandable QuestionRichText--collapsed" data-reactid="87"><div data-reactid="88"><span class="RichText" itemprop="text" data-reactid="89">看了网上好多对REST的介绍，非常理论，让人很难耐着性子看完。即使看完了，还是会云里雾里，不知所云。 了解了什么是REST，我们再看看RESTful的实现。最近，使用 RPC 样式架构构建的基于 SOAP 的 Web 服务成为实现 SOA 最常用的方法。RPC 样式的 Web 服务客户端将一个装满数据的信封（包括方法和参数信息）通过 HTTP 发送到服务器。服务器打开信封并使用传入参数执行指定的方法。方法的结果打包到一个信封并作为响应发回客户端。…</span><button class="Button QuestionRichText-more Button--plain" type="button" data-reactid="90"><!-- react-text: 91 -->显示全部<!-- /react-text --><svg viewBox="0 0 10 6" class="Icon QuestionRichText-more-icon Icon--arrow" style="height:16px;width:10px;" width="10" height="16" aria-hidden="true" data-reactid="92"><title data-reactid="93"></title><g data-reactid="94"><path d="M8.716.217L5.002 4 1.285.218C.99-.072.514-.072.22.218c-.294.29-.294.76 0 1.052l4.25 4.512c.292.29.77.29 1.063 0L9.78 1.27c.293-.29.293-.76 0-1.052-.295-.29-.77-.29-1.063 0z"/></g></svg></button></div></div></div></div></div><div class="QuestionHeader-side" data-reactid="95"><div class="QuestionHeader-follow-status" data-reactid="96"><div class="QuestionFollowStatus" data-reactid="97"><div class="NumberBoard QuestionFollowStatus-counts NumberBoard--divider" data-reactid="98"><div class="NumberBoard-item" data-reactid="99"><div class="NumberBoard-itemInner" data-reactid="100"><div class="NumberBoard-itemName" data-reactid="101">关注者</div><strong class="NumberBoard-itemValue" title="3249" data-reactid="102">3,249</strong></div></div><div class="NumberBoard-item" data-reactid="103"><div class="NumberBoard-itemInner" data-reactid="104"><div class="NumberBoard-itemName" data-reactid="105">被浏览</div><strong class="NumberBoard-itemValue" title="337156" data-reactid="106">337,156</strong></div></div></div><!-- react-empty: 107 --></div></div></div></div><div class="QuestionHeader-footer" data-reactid="108"><div class="QuestionHeader-footer-inner" data-reactid="109"><div class="QuestionHeader-main QuestionHeader-footer-main" data-reactid="110"><div class="QuestionButtonGroup" data-reactid="111"><button class="Button FollowButton Button--primary Button--blue" type="button" data-reactid="112"><!-- react-text: 113 -->关注问题<!-- /react-text --></button><button class="Button Button--blue" type="button" data-reactid="114"><svg viewBox="0 0 12 12" class="Icon Button-icon Icon--modify" style="height:16px;width:14px;" width="14" height="16" aria-hidden="true" data-reactid="115"><title data-reactid="116"></title><g data-reactid="117"><path d="M.423 10.32L0 12l1.667-.474 1.55-.44-2.4-2.33-.394 1.564zM10.153.233c-.327-.318-.85-.31-1.17.018l-.793.817 2.49 2.414.792-.814c.318-.328.312-.852-.017-1.17l-1.3-1.263zM3.84 10.536L1.35 8.122l6.265-6.46 2.49 2.414-6.265 6.46z" fill-rule="evenodd"/></g></svg><!-- react-text: 118 -->写回答<!-- /react-text --></button></div><div class="QuestionHeaderActions" data-reactid="119"><div class="QuestionHeader-Comment" data-reactid="120"><button class="Button Button--plain Button--withIcon Button--withLabel" type="button" data-reactid="121"><span style="display:inline-flex;align-items:center;" data-reactid="122"><!-- react-text: 123 -->​<!-- /react-text --><svg class="Zi Zi--Comment Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="124"><path d="M10.241 19.313a.97.97 0 0 0-.77.2 7.908 7.908 0 0 1-3.772 1.482.409.409 0 0 1-.38-.637 5.825 5.825 0 0 0 1.11-2.237.605.605 0 0 0-.227-.59A7.935 7.935 0 0 1 3 11.25C3 6.7 7.03 3 12 3s9 3.7 9 8.25-4.373 9.108-10.759 8.063z" fill-rule="evenodd" data-reactid="125"></path></svg></span><!-- react-text: 126 -->5 条评论<!-- /react-text --><!-- react-empty: 127 --></button></div><div class="Popover ShareMenu" data-reactid="128"><div class="" id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="129"><button class="Button Button--plain Button--withIcon Button--withLabel" type="button" data-reactid="130"><span style="display:inline-flex;align-items:center;" data-reactid="131"><!-- react-text: 132 -->​<!-- /react-text --><svg class="Zi Zi--Share Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="133"><path d="M2.931 7.89c-1.067.24-1.275 1.669-.318 2.207l5.277 2.908 8.168-4.776c.25-.127.477.198.273.39L9.05 14.66l.927 5.953c.18 1.084 1.593 1.376 2.182.456l9.644-15.242c.584-.892-.212-2.029-1.234-1.796L2.93 7.89z" fill-rule="evenodd" data-reactid="134"></path></svg></span><!-- react-text: 135 -->分享<!-- /react-text --></button></div><!-- react-empty: 136 --></div><button class="Button Button--plain Button--withIcon Button--withLabel" type="button" data-reactid="137"><span style="display:inline-flex;align-items:center;" data-reactid="138"><!-- react-text: 139 -->​<!-- /react-text --><svg class="Zi Zi--Star Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="140"><path d="M5.515 19.64l.918-5.355-3.89-3.792c-.926-.902-.639-1.784.64-1.97L8.56 7.74l2.404-4.871c.572-1.16 1.5-1.16 2.072 0L15.44 7.74l5.377.782c1.28.186 1.566 1.068.64 1.97l-3.89 3.793.918 5.354c.219 1.274-.532 1.82-1.676 1.218L12 18.33l-4.808 2.528c-1.145.602-1.896.056-1.677-1.218z" fill-rule="evenodd" data-reactid="141"></path></svg></span><!-- react-text: 142 -->邀请回答<!-- /react-text --></button><div class="Popover" data-reactid="143"><button class="Button Button--plain Button--withIcon Button--iconOnly" aria-label="更多" type="button" id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="144"><span style="display:inline-flex;align-items:center;" data-reactid="145"><!-- react-text: 146 -->​<!-- /react-text --><svg class="Zi Zi--Dots Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="147"><path d="M5 14a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm7 0a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm7 0a2 2 0 1 1 0-4 2 2 0 0 1 0 4z" fill-rule="evenodd" data-reactid="148"></path></svg></span></button><!-- react-empty: 149 --></div><!-- react-empty: 150 --><!-- react-empty: 151 --><!-- react-empty: 152 --><!-- react-empty: 153 --><!-- react-empty: 154 --></div><div class="QuestionHeader-actions" data-reactid="155"></div></div></div></div></div><div data-reactid="156"><div data-reactid="157"><div class="Sticky" data-reactid="158"></div></div></div></div><div class="Question-main" data-reactid="159"><div class="Question-mainColumn" data-reactid="160"><div data-reactid="161"><!-- react-empty: 162 --><div id="QuestionAnswers-answers" class="QuestionAnswers-answers" data-zop-feedlistmap="0,0,1,0" data-reactid="163"><div class="Card" data-reactid="164"><div class="List" data-reactid="165"><div class="List-header" data-reactid="166"><h4 class="List-headerText" data-reactid="167"><span data-reactid="168"><!-- react-text: 169 -->50<!-- /react-text --><!-- react-text: 170 --> 个回答<!-- /react-text --></span></h4><div class="List-headerOptions" data-reactid="171"><div class="Popover" data-reactid="172"><button class="Button Select-button Select-plainButton Button--plain" role="combobox" aria-expanded="false" type="button" id="null-toggle" aria-haspopup="true" aria-owns="null-content" data-reactid="173"><!-- react-text: 174 -->默认排序<!-- /react-text --><span style="display:inline-flex;align-items:center;" data-reactid="175"><!-- react-text: 176 -->​<!-- /react-text --><svg class="Zi Zi--Select Select-arrow" fill="currentColor" viewBox="0 0 24 24" width="24" height="24" data-reactid="177"><path d="M12 16.183l2.716-2.966a.757.757 0 0 1 1.064.001.738.738 0 0 1 0 1.052l-3.247 3.512a.758.758 0 0 1-1.064 0L8.22 14.27a.738.738 0 0 1 0-1.052.758.758 0 0 1 1.063 0L12 16.183zm0-9.365L9.284 9.782a.758.758 0 0 1-1.064 0 .738.738 0 0 1 0-1.052l3.248-3.512a.758.758 0 0 1 1.065 0L15.78 8.73a.738.738 0 0 1 0 1.052.757.757 0 0 1-1.063.001L12 6.818z" fill-rule="evenodd" data-reactid="178"></path></svg></span></button><!-- react-empty: 179 --></div></div></div><div data-reactid="180"><div class="" data-reactid="181"><div class="List-item" data-reactid="182"><div class="ContentItem AnswerItem" data-za-index="0" data-zop="{&quot;authorName&quot;:&quot;覃超&quot;,&quot;itemId&quot;:48094438,&quot;title&quot;:&quot;怎样用通俗的语言解释REST，以及RESTful？&quot;,&quot;type&quot;:&quot;answer&quot;}" name="48094438" itemprop="acceptedAnswer" itemtype="http://schema.org/Answer" itemscope="" data-reactid="183"><div class="ContentItem-meta" data-reactid="184"><div class="AuthorInfo AnswerItem-authorInfo AnswerItem-authorInfo--related" itemprop="author" itemscope="" itemtype="http://schema.org/Person" data-reactid="185"><meta itemprop="name" content="覃超" data-reactid="186"/><meta itemprop="image" content="https://pic4.zhimg.com/d377edfcb_is.jpg" data-reactid="187"/><meta itemprop="url" content="https://www.zhihu.com/people/qin.chao" data-reactid="188"/><meta itemprop="zhihu:followerCount" content="144392" data-reactid="189"/><span class="UserLink AuthorInfo-avatarWrapper" data-reactid="190"><div class="Popover" data-reactid="191"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="192"><a class="UserLink-link" data-za-detail-view-element_name="User" href="/people/qin.chao" data-reactid="193"><img class="Avatar AuthorInfo-avatar" width="38" height="38" src="https://pic4.zhimg.com/d377edfcb_xs.jpg" srcset="https://pic4.zhimg.com/d377edfcb_l.jpg 2x" alt="覃超" data-reactid="194"/></a></div><!-- react-empty: 195 --></div></span><div class="AuthorInfo-content" data-reactid="196"><div class="AuthorInfo-head" data-reactid="197"><span class="UserLink AuthorInfo-name" data-reactid="198"><div class="Popover" data-reactid="199"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="200"><a class="UserLink-link" data-za-detail-view-element_name="User" href="/people/qin.chao" data-reactid="201">覃超</a></div><!-- react-empty: 202 --></div><a class="UserLink-badge" data-tooltip="优秀回答者" href="/question/48509984" target="_blank" data-reactid="203"><svg viewBox="0 0 20 20" class="Icon Icon--badgeGlorious" style="height:16px;width:16px;" width="16" height="16" aria-hidden="true" data-reactid="204"><title data-reactid="205">用户标识</title><g data-reactid="206"><g fill="none" fill-rule="evenodd">     <path d="M.64 11.39c1.068.895 1.808 2.733 1.66 4.113l.022-.196c-.147 1.384.856 2.4 2.24 2.278l-.198.016c1.387-.12 3.21.656 4.083 1.735l-.125-.154c.876 1.085 2.304 1.093 3.195.028l-.127.152c.895-1.068 2.733-1.808 4.113-1.66l-.198-.022c1.386.147 2.402-.856 2.28-2.238l.016.197c-.12-1.388.656-3.212 1.735-4.084l-.154.125c1.084-.876 1.093-2.304.028-3.195l.152.127c-1.068-.895-1.808-2.732-1.66-4.113l-.022.198c.147-1.386-.856-2.4-2.24-2.28l.198-.016c-1.387.122-3.21-.655-4.083-1.734l.125.153C10.802-.265 9.374-.274 8.483.79L8.61.64c-.895 1.068-2.733 1.808-4.113 1.662l.198.02c-1.386-.147-2.4.857-2.28 2.24L2.4 4.363c.12 1.387-.656 3.21-1.735 4.084l.154-.126C-.265 9.2-.274 10.626.79 11.517L.64 11.39z" fill="#FF9500"/>     <path d="M10.034 12.96L7.38 14.58c-.47.286-.747.09-.618-.45l.72-3.024-2.36-2.024c-.418-.357-.318-.68.235-.725l3.1-.25 1.195-2.87c.21-.508.55-.513.763 0l1.195 2.87 3.1.25c.547.043.657.365.236.725l-2.362 2.024.72 3.025c.13.535-.143.74-.616.45l-2.654-1.62z" fill="#FFF"/>   </g></g></svg></a></span></div><div class="AuthorInfo-detail" data-reactid="207"><div class="AuthorInfo-badge" data-reactid="208"><div class="AuthorInfo-badgeText" data-reactid="209"><span data-reactid="210"><span data-reactid="211"><a href="/people/qin.chao/answers/topic/19550517" data-reactid="212">互联网</a><!-- react-text: 213 -->、<!-- /react-text --></span><span data-reactid="214"><a href="/people/qin.chao/answers/topic/19552330" data-reactid="215">程序员</a><!-- react-text: 216 --> <!-- /react-text --></span><!-- react-text: 217 -->话题<!-- /react-text --></span><!-- react-text: 218 -->的<!-- /react-text --><!-- react-text: 219 -->优秀回答者<!-- /react-text --></div></div></div></div></div><div class="AnswerItem-extraInfo" data-reactid="220"><span class="Voters" data-reactid="221"><button class="Button Button--plain" type="button" data-reactid="222"><!-- react-text: 223 -->1,502 人赞同了该回答<!-- /react-text --></button><!-- react-empty: 224 --></span></div></div><meta itemprop="image" content="https://pic2.zhimg.com/7405939b62a73f28846533de08db3a80_200x112.jpg" data-reactid="225"/><meta itemprop="upvoteCount" content="1502" data-reactid="226"/><meta itemprop="url" content="https://www.zhihu.com/question/28557115/answer/48094438" data-reactid="227"/><meta itemprop="dateCreated" content="2015-05-17T11:13:53.000Z" data-reactid="228"/><meta itemprop="dateModified" content="2015-05-17T13:50:49.000Z" data-reactid="229"/><meta itemprop="commentCount" content="55" data-reactid="230"/><div class="RichContent RichContent--unescapable" data-reactid="231"><div class="RichContent-inner" data-reactid="232"><span class="RichText CopyrightRichText-richText" itemprop="text" data-reactid="233">我觉得问题很好：REST -- REpresentational State Transfer 直接翻译：表现层状态转移。这个中文直译经常出现在很多博客中。尼玛谁听得懂“表现层状态转移”？这是人话吗？我自己也困惑了很久，查询了很多资料，花了差不多一年有个还算清晰的理解。分享如下：<br><br><a data-hash="6ef2e77274cb0719253a577665cf690e" href="https://www.zhihu.com/people/6ef2e77274cb0719253a577665cf690e" class="member_mention" data-editable="true" data-title="@Ivony" data-hovercard="p$b$6ef2e77274cb0719253a577665cf690e">@Ivony</a> 老师的一句话概括很精辟：<br><b>URL定位资源，用HTTP动词（GET,POST,DELETE,DETC）描述操作。<br></b><br><b>--- 简洁版 ---</b><br><br>0. REST不是"rest"这个单词，而是几个单词缩写。但即使那几个单词说出来，也无法理解在说什么 -_-!! （不是要贬低人，是我自己也理解困难）；<br>1. REST描述的是在网络中client和server的一种交互形式；REST本身不实用，实用的是如何设计 RESTful API（REST风格的网络接口）；<br>2. Server提供的RESTful API中，URL中只使用名词来指定资源，原则上不使用动词。“资源”是REST架构或者说整个网络处理的核心。比如：<br><a href="https://link.zhihu.com/?target=http%3A//api.qc.com/v1/newsfeed" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">http://</span><span class="visible">api.qc.com/v1/newsfeed</span><span class="invisible"></span></a>: 获取某人的新鲜; <br><a href="https://link.zhihu.com/?target=http%3A//api.qc.com/v1/friends" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">http://</span><span class="visible">api.qc.com/v1/friends</span><span class="invisible"></span></a>: 获取某人的好友列表;<br><a href="https://link.zhihu.com/?target=http%3A//api.qc.com/v1/profile" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">http://</span><span class="visible">api.qc.com/v1/profile</span><span class="invisible"></span></a>: 获取某人的详细信息;3. 用HTTP协议里的动词来实现资源的添加，修改，删除等操作。即通过HTTP动词来实现资源的状态扭转：<br>GET    用来获取资源，<br>POST  用来新建资源（也可以用于更新资源），<br>PUT    用来更新资源，<br>DELETE  用来删除资源。比如：<br>DELETE <a href="https://link.zhihu.com/?target=http%3A//api.qc.com/v1/friends" class=" wrap external" target="_blank" rel="nofollow noreferrer">http://api.qc.com/v1/</a>friends: 删除某人的好友 （在http parameter指定好友id）<br>POST <a href="https://link.zhihu.com/?target=http%3A//api.qc.com/v1/friends" class=" wrap external" target="_blank" rel="nofollow noreferrer">http://api.qc.com/v1/</a>friends: 添加好友<br>UPDATE <a href="https://link.zhihu.com/?target=http%3A//api.qc.com/v1/profile" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">http://</span><span class="visible">api.qc.com/v1/profile</span><span class="invisible"></span></a>: 更新个人资料<br><br>禁止使用： GET <a href="https://link.zhihu.com/?target=http%3A//api.qc.com/v1/deleteFriend" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">http://</span><span class="visible">api.qc.com/v1/deleteFri</span><span class="invisible">end</span><span class="ellipsis"></span></a> 图例：<br><figure><noscript><img src="https://pic2.zhimg.com/50/7405939b62a73f28846533de08db3a80_hd.jpg" data-rawwidth="1328" data-rawheight="702" class="origin_image zh-lightbox-thumb" width="1328" data-original="https://pic2.zhimg.com/7405939b62a73f28846533de08db3a80_r.jpg"></noscript><img src="data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1328'%20height='702'&gt;&lt;/svg&gt;" data-rawwidth="1328" data-rawheight="702" class="origin_image zh-lightbox-thumb lazy" width="1328" data-original="https://pic2.zhimg.com/7405939b62a73f28846533de08db3a80_r.jpg" data-actualsrc="https://pic2.zhimg.com/50/7405939b62a73f28846533de08db3a80_hd.jpg"></figure><br>4. Server和Client之间传递某资源的一个表现形式，比如用JSON，XML传输文本，或者用JPG，WebP传输图片等。当然还可以压缩HTTP传输时的数据（on-wire data compression）。<br>5. 用 HTTP Status Code传递Server的状态信息。比如最常用的 200 表示成功，500 表示Server内部错误等。<br><br>主要信息就这么点。最后是要解放思想，Web端不再用之前典型的PHP或JSP架构，而是改为前段渲染和附带处理简单的商务逻辑（比如AngularJS或者BackBone的一些样例）。Web端和Server只使用上述定义的API来传递数据和改变数据状态。格式一般是JSON。iOS和Android同理可得。由此可见，Web，iOS，Android和第三方开发者变为平等的角色通过一套API来共同消费Server提供的服务。<br><br><br><b>--- 详细版 ---</b><br><br><b>先说REST名称</b><br>REST -- REpresentational State Transfer<br>首先，之所以晦涩是因为前面主语被去掉了，全称是 Resource Representational State Transfer：通俗来讲就是：资源在网络中以某种表现形式进行状态转移。分解开来：<br>Resource：资源，即数据（前面说过网络的核心）。比如 newsfeed，friends等；<br>Representational：某种表现形式，比如用JSON，XML，JPEG等；<br>State Transfer：状态变化。通过HTTP动词实现。<br><b>REST的出处</b><br>Roy Fielding的毕业论文。这哥们参与设计HTTP协议，也是Apache Web Server项目（可惜现在已经是 nginx 的天下）的co-founder。PhD的毕业学校是 UC Irvine，Irvine在加州，有着充裕的阳光和美丽的海滩，是著名的富人区。Oculus VR 的总部就坐落于此（虚拟现实眼镜，被FB收购，CTO为Quake和Doom的作者 John Carmack）。<br>众说周知，论文都是晦涩难懂的。当年在CMU读书的时候，很多课程都会安排每周两篇的Paper review。现在回想起来每次写Paper review都是我最为痛苦的时候。REST这篇博士论文毫无疑问更甚。<br>论文地址：<a href="https://link.zhihu.com/?target=http%3A//www.ics.uci.edu/%7Efielding/pubs/dissertation/top.htm" class=" wrap external" target="_blank" rel="nofollow noreferrer">Architectural Styles and the Design of Network-based Software Architectures</a><br>REST章节：<a href="https://link.zhihu.com/?target=http%3A//www.ics.uci.edu/%7Efielding/pubs/dissertation/rest_arch_style.htm" class=" wrap external" target="_blank" rel="nofollow noreferrer">Fielding Dissertation: CHAPTER 5: Representational State Transfer (REST)</a><br>REST那章我初读了，整个论文没有读完 =_=<br><figure><noscript><img src="https://pic1.zhimg.com/50/11cdfc60bde58e8545bafe42f0af79ca_hd.jpg" data-rawwidth="500" data-rawheight="375" class="origin_image zh-lightbox-thumb" width="500" data-original="https://pic1.zhimg.com/11cdfc60bde58e8545bafe42f0af79ca_r.jpg"></noscript><img src="data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='500'%20height='375'&gt;&lt;/svg&gt;" data-rawwidth="500" data-rawheight="375" class="origin_image zh-lightbox-thumb lazy" width="500" data-original="https://pic1.zhimg.com/11cdfc60bde58e8545bafe42f0af79ca_r.jpg" data-actualsrc="https://pic1.zhimg.com/50/11cdfc60bde58e8545bafe42f0af79ca_hd.jpg"></figure><br><b>RESTful API</b><br>实用的是如何正确地理解 RESTful架构和设计好RESTful API。<br><br><b>首先为什么要用RESTful结构呢？</b><br>大家都知道"古代"网页是前端后端融在一起的，比如之前的PHP，JSP等。在之前的桌面时代问题不大，但是近年来移动互联网的发展，各种类型的Client层出不穷，RESTful可以通过一套统一的接口为 Web，iOS和Android提供服务。另外对于广大平台来说，比如Facebook platform，微博开放平台，微信公共平台等，它们不需要有显式的前端，只需要一套提供服务的接口，于是RESTful更是它们最好的选择。在RESTful架构下：<br><figure><noscript><img src="https://pic4.zhimg.com/50/06ee404783540f0af299042057738a99_hd.jpg" data-rawwidth="550" data-rawheight="250" class="origin_image zh-lightbox-thumb" width="550" data-original="https://pic4.zhimg.com/06ee404783540f0af299042057738a99_r.jpg"></noscript><img src="data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='550'%20height='250'&gt;&lt;/svg&gt;" data-rawwidth="550" data-rawheight="250" class="origin_image zh-lightbox-thumb lazy" width="550" data-original="https://pic4.zhimg.com/06ee404783540f0af299042057738a99_r.jpg" data-actualsrc="https://pic4.zhimg.com/50/06ee404783540f0af299042057738a99_hd.jpg"></figure><br><b>Server的API如何设计才满足RESTful要求?</b><br>首先是简洁版里面的那几点。外加一些附带的 best practices：<br>1. URL root:<br><a href="https://link.zhihu.com/?target=https%3A//example.org/api/v1/" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">https://</span><span class="visible">example.org/api/v1/</span><span class="invisible"></span></a>*<br><a href="https://link.zhihu.com/?target=https%3A//api.example.com/v1/" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">https://</span><span class="visible">api.example.com/v1/</span><span class="invisible"></span></a>*2. API versioning:<br>可以放在URL里面，也可以用HTTP的header：<br>/api/v1/<br>3. URI使用名词而不是动词，且推荐用复数。<br>BAD<br><ul><li>/getProducts</li><li>/listOrders</li><li>/retrieveClientByOrder?orderId=1</li></ul>GOOD<br><ul><li>GET /products : will return the list of all products</li><li>POST /products : will add a product to the collection</li><li>GET /products/4 : will retrieve product #4</li><li>PATCH/PUT /products/4 : will update product #4</li></ul>4. 保证  HEAD 和 GET 方法是安全的，不会对资源状态有所改变（污染）。比如严格杜绝如下情况：<br>GET /deleteProduct?id=1<br>5. 资源的地址推荐用嵌套结构。比如：<br>GET /friends/10375923/profile<br>UPDATE /profile/primaryAddress/city6. 警惕返回结果的大小。如果过大，及时进行分页（pagination）或者加入限制（limit）。HTTP协议支持分页（Pagination）操作，在Header中使用 Link 即可。<br>7. 使用正确的HTTP Status Code表示访问状态：<a href="https://link.zhihu.com/?target=http%3A//www.w3.org/Protocols/rfc2616/rfc2616-sec10.html" class=" wrap external" target="_blank" rel="nofollow noreferrer">HTTP/1.1: Status Code Definitions</a><br>8. 在返回结果用明确易懂的文本（String。注意返回的错误是要给人看的，避免用 1001 这种错误信息），而且适当地加入注释。<br>9. 关于安全：自己的接口就用https，加上一个key做一次hash放在最后即可。考虑到国情，HTTPS在无线网络里不稳定，可以使用Application Level的加密手段把整个HTTP的payload加密。有兴趣的朋友可以用手机连上电脑的共享Wi-Fi，然后用Charles监听微信的网络请求（发照片或者刷朋友圈）。<br>如果是平台的API，可以用成熟但是复杂的OAuth2，新浪微博这篇：<a href="https://link.zhihu.com/?target=http%3A//open.weibo.com/wiki/%25E6%258E%2588%25E6%259D%2583%25E6%259C%25BA%25E5%2588%25B6%25E8%25AF%25B4%25E6%2598%258E" class=" wrap external" target="_blank" rel="nofollow noreferrer">授权机制说明</a><br><br><b>各端的具体实现</b><br>如上面的图所示，Server统一提供一套RESTful API，web+ios+android作为同等公民调用API。各端发展到现在，都有一套比较成熟的框架来帮开发者事半功倍。<br><br>-- Server --<br>推荐： Spring MVC 或者 Jersey 或者 Play Framework<br>教程：<br><a href="https://link.zhihu.com/?target=https%3A//spring.io/guides/gs/rest-service/" class=" wrap external" target="_blank" rel="nofollow noreferrer">Getting Started · Building a RESTful Web Service</a><br><br>-- Android --<br>推荐： RetroFit ( <a href="https://link.zhihu.com/?target=http%3A//square.github.io/retrofit/" class=" wrap external" target="_blank" rel="nofollow noreferrer">Retrofit</a> ) 或者 Volley ( <a href="https://link.zhihu.com/?target=https%3A//github.com/mcxiaoke/android-volley" class=" wrap external" target="_blank" rel="nofollow noreferrer">mcxiaoke/android-volley · GitHub</a> Google官方的被block，就不贴了 ) <br>教程：<br><a href="https://link.zhihu.com/?target=https%3A//futurestud.io/blog/retrofit-getting-started-and-android-client/" class=" wrap external" target="_blank" rel="nofollow noreferrer">Retrofit โ Getting Started and Create an Android Client</a><br><a href="https://link.zhihu.com/?target=http%3A//www.cnblogs.com/angeldevil/p/3757335.html" class=" wrap external" target="_blank" rel="nofollow noreferrer">快速Android开发系列网络篇之Retrofit</a><br><br>-- iOS --<br>推荐：RestKit ( <a href="https://link.zhihu.com/?target=https%3A//github.com/RestKit/RestKit" class=" wrap external" target="_blank" rel="nofollow noreferrer">RestKit/RestKit · GitHub</a> )<br>教程：<br><a href="https://link.zhihu.com/?target=http%3A//code.tutsplus.com/tutorials/restkit_ios-sdk--mobile-4524" class=" wrap external" target="_blank" rel="nofollow noreferrer">Developing RESTful iOS Apps with RestKit</a><br><br>-- Web --<br>推荐随便搞！可以用重量级的AngularJS，也可以用轻量级 Backbone + jQuery 等。<br>教程：<a href="https://link.zhihu.com/?target=http%3A//blog.javachen.com/2015/01/06/build-app-with-spring-boot-and-gradle/" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">http://</span><span class="visible">blog.javachen.com/2015/</span><span class="invisible">01/06/build-app-with-spring-boot-and-gradle/</span><span class="ellipsis"></span></a><br><br>参考：<br>[1]: <a href="https://link.zhihu.com/?target=http%3A//bourgeois.me/rest/" class=" wrap external" target="_blank" rel="nofollow noreferrer">Some REST best practices</a><br>[2]: <a href="https://link.zhihu.com/?target=https%3A//developer.github.com/v3/" class=" wrap external" target="_blank" rel="nofollow noreferrer">GitHub API v3</a><br>[3]: <a href="https://link.zhihu.com/?target=https%3A//github.com/tlhunter/consumer-centric-api-design" class=" wrap external" target="_blank" rel="nofollow noreferrer">tlhunter/consumer-centric-api-design · GitHub</a><br><br>最后附带一个彩蛋：<br>Facebook台球表演: <a href="https://link.zhihu.com/?target=http%3A//v.youku.com/v_show/id_XMzYyOTIxMTI4.html%3Ffrom%3Dy1.7-2" class=" wrap external" target="_blank" rel="nofollow noreferrer">台球1—在线播放</a></span><!-- react-empty: 234 --></div><div data-reactid="235"><div class="ContentItem-time" data-reactid="236"><a target="_blank" href="/question/28557115/answer/48094438" data-reactid="237"><span data-tooltip="发布于 2015-05-17" data-reactid="238"><!-- react-text: 239 -->编辑于 <!-- /react-text --><!-- react-text: 240 -->2015-05-17<!-- /react-text --></span></a></div></div><div class="ContentItem-actions RichContent-actions" data-reactid="241"><span data-reactid="242"><button class="Button VoteButton VoteButton--up" aria-label="赞同" type="button" data-reactid="243"><svg viewBox="0 0 20 18" class="Icon VoteButton-upIcon Icon--triangle" style="height:16px;width:9px;" width="9" height="16" aria-hidden="true" data-reactid="244"><title data-reactid="245"></title><g data-reactid="246"><path d="M0 15.243c0-.326.088-.533.236-.896l7.98-13.204C8.57.57 9.086 0 10 0s1.43.57 1.784 1.143l7.98 13.204c.15.363.236.57.236.896 0 1.386-.875 1.9-1.955 1.9H1.955c-1.08 0-1.955-.517-1.955-1.9z"/></g></svg><!-- react-text: 247 -->1.5K<!-- /react-text --></button><button class="Button VoteButton VoteButton--down" aria-label="反对" type="button" data-reactid="248"><svg viewBox="0 0 20 18" class="Icon VoteButton-downIcon Icon--triangle" style="height:16px;width:9px;" width="9" height="16" aria-hidden="true" data-reactid="249"><title data-reactid="250"></title><g data-reactid="251"><path d="M0 15.243c0-.326.088-.533.236-.896l7.98-13.204C8.57.57 9.086 0 10 0s1.43.57 1.784 1.143l7.98 13.204c.15.363.236.57.236.896 0 1.386-.875 1.9-1.955 1.9H1.955c-1.08 0-1.955-.517-1.955-1.9z"/></g></svg></button></span><button class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel" type="button" data-reactid="252"><span style="display:inline-flex;align-items:center;" data-reactid="253"><!-- react-text: 254 -->​<!-- /react-text --><svg class="Zi Zi--Comment Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="255"><path d="M10.241 19.313a.97.97 0 0 0-.77.2 7.908 7.908 0 0 1-3.772 1.482.409.409 0 0 1-.38-.637 5.825 5.825 0 0 0 1.11-2.237.605.605 0 0 0-.227-.59A7.935 7.935 0 0 1 3 11.25C3 6.7 7.03 3 12 3s9 3.7 9 8.25-4.373 9.108-10.759 8.063z" fill-rule="evenodd" data-reactid="256"></path></svg></span><!-- react-text: 257 -->55 条评论<!-- /react-text --></button><div class="Popover ShareMenu ContentItem-action" data-reactid="258"><div class="" id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="259"><button class="Button Button--plain Button--withIcon Button--withLabel" type="button" data-reactid="260"><span style="display:inline-flex;align-items:center;" data-reactid="261"><!-- react-text: 262 -->​<!-- /react-text --><svg class="Zi Zi--Share Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="263"><path d="M2.931 7.89c-1.067.24-1.275 1.669-.318 2.207l5.277 2.908 8.168-4.776c.25-.127.477.198.273.39L9.05 14.66l.927 5.953c.18 1.084 1.593 1.376 2.182.456l9.644-15.242c.584-.892-.212-2.029-1.234-1.796L2.93 7.89z" fill-rule="evenodd" data-reactid="264"></path></svg></span><!-- react-text: 265 -->分享<!-- /react-text --></button></div><!-- react-empty: 266 --></div><button class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel" type="button" data-reactid="267"><span style="display:inline-flex;align-items:center;" data-reactid="268"><!-- react-text: 269 -->​<!-- /react-text --><svg class="Zi Zi--Star Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="270"><path d="M5.515 19.64l.918-5.355-3.89-3.792c-.926-.902-.639-1.784.64-1.97L8.56 7.74l2.404-4.871c.572-1.16 1.5-1.16 2.072 0L15.44 7.74l5.377.782c1.28.186 1.566 1.068.64 1.97l-3.89 3.793.918 5.354c.219 1.274-.532 1.82-1.676 1.218L12 18.33l-4.808 2.528c-1.145.602-1.896.056-1.677-1.218z" fill-rule="evenodd" data-reactid="271"></path></svg></span><!-- react-text: 272 -->收藏<!-- /react-text --></button><button class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel" type="button" data-reactid="273"><span style="display:inline-flex;align-items:center;" data-reactid="274"><!-- react-text: 275 -->​<!-- /react-text --><svg class="Zi Zi--Heart Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="276"><path d="M2 8.437C2 5.505 4.294 3.094 7.207 3 9.243 3 11.092 4.19 12 6c.823-1.758 2.649-3 4.651-3C19.545 3 22 5.507 22 8.432 22 16.24 13.842 21 12 21 10.158 21 2 16.24 2 8.437z" fill-rule="evenodd" data-reactid="277"></path></svg></span><!-- react-text: 278 -->感谢<!-- /react-text --></button><button class="Button ContentItem-action ContentItem-rightButton Button--plain" data-zop-retract-question="true" type="button" data-reactid="279"><span class="RichContent-collapsedText" data-reactid="280">收起</span><svg viewBox="0 0 10 6" class="Icon ContentItem-arrowIcon is-active Icon--arrow" style="height:16px;width:10px;" width="10" height="16" aria-hidden="true" data-reactid="281"><title data-reactid="282"></title><g data-reactid="283"><path d="M8.716.217L5.002 4 1.285.218C.99-.072.514-.072.22.218c-.294.29-.294.76 0 1.052l4.25 4.512c.292.29.77.29 1.063 0L9.78 1.27c.293-.29.293-.76 0-1.052-.295-.29-.77-.29-1.063 0z"/></g></svg></button></div></div><!-- react-empty: 284 --><!-- react-empty: 285 --><!-- react-empty: 286 --><!-- react-empty: 287 --><!-- react-empty: 288 --><!-- react-empty: 289 --></div></div><div class="List-item" data-reactid="290"><div class="ContentItem AnswerItem" data-za-index="1" data-zop="{&quot;authorName&quot;:&quot;Ivony&quot;,&quot;itemId&quot;:41265890,&quot;title&quot;:&quot;怎样用通俗的语言解释REST，以及RESTful？&quot;,&quot;type&quot;:&quot;answer&quot;}" name="41265890" itemprop="suggestedAnswer" itemtype="http://schema.org/Answer" itemscope="" data-reactid="291"><div class="ContentItem-meta" data-reactid="292"><div class="AuthorInfo AnswerItem-authorInfo AnswerItem-authorInfo--related" itemprop="author" itemscope="" itemtype="http://schema.org/Person" data-reactid="293"><meta itemprop="name" content="Ivony" data-reactid="294"/><meta itemprop="image" content="https://pic4.zhimg.com/23a5bca736788ab73e3bd58e56761cda_is.jpg" data-reactid="295"/><meta itemprop="url" content="https://www.zhihu.com/people/Ivony" data-reactid="296"/><meta itemprop="zhihu:followerCount" content="65441" data-reactid="297"/><span class="UserLink AuthorInfo-avatarWrapper" data-reactid="298"><div class="Popover" data-reactid="299"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="300"><a class="UserLink-link" data-za-detail-view-element_name="User" href="/people/Ivony" data-reactid="301"><img class="Avatar AuthorInfo-avatar" width="38" height="38" src="https://pic4.zhimg.com/23a5bca736788ab73e3bd58e56761cda_xs.jpg" srcset="https://pic4.zhimg.com/23a5bca736788ab73e3bd58e56761cda_l.jpg 2x" alt="Ivony" data-reactid="302"/></a></div><!-- react-empty: 303 --></div></span><div class="AuthorInfo-content" data-reactid="304"><div class="AuthorInfo-head" data-reactid="305"><span class="UserLink AuthorInfo-name" data-reactid="306"><div class="Popover" data-reactid="307"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="308"><a class="UserLink-link" data-za-detail-view-element_name="User" href="/people/Ivony" data-reactid="309">Ivony</a></div><!-- react-empty: 310 --></div><a class="UserLink-badge" data-tooltip="优秀回答者" href="/question/48509984" target="_blank" data-reactid="311"><svg viewBox="0 0 20 20" class="Icon Icon--badgeGlorious" style="height:16px;width:16px;" width="16" height="16" aria-hidden="true" data-reactid="312"><title data-reactid="313">用户标识</title><g data-reactid="314"><g fill="none" fill-rule="evenodd">     <path d="M.64 11.39c1.068.895 1.808 2.733 1.66 4.113l.022-.196c-.147 1.384.856 2.4 2.24 2.278l-.198.016c1.387-.12 3.21.656 4.083 1.735l-.125-.154c.876 1.085 2.304 1.093 3.195.028l-.127.152c.895-1.068 2.733-1.808 4.113-1.66l-.198-.022c1.386.147 2.402-.856 2.28-2.238l.016.197c-.12-1.388.656-3.212 1.735-4.084l-.154.125c1.084-.876 1.093-2.304.028-3.195l.152.127c-1.068-.895-1.808-2.732-1.66-4.113l-.022.198c.147-1.386-.856-2.4-2.24-2.28l.198-.016c-1.387.122-3.21-.655-4.083-1.734l.125.153C10.802-.265 9.374-.274 8.483.79L8.61.64c-.895 1.068-2.733 1.808-4.113 1.662l.198.02c-1.386-.147-2.4.857-2.28 2.24L2.4 4.363c.12 1.387-.656 3.21-1.735 4.084l.154-.126C-.265 9.2-.274 10.626.79 11.517L.64 11.39z" fill="#FF9500"/>     <path d="M10.034 12.96L7.38 14.58c-.47.286-.747.09-.618-.45l.72-3.024-2.36-2.024c-.418-.357-.318-.68.235-.725l3.1-.25 1.195-2.87c.21-.508.55-.513.763 0l1.195 2.87 3.1.25c.547.043.657.365.236.725l-2.362 2.024.72 3.025c.13.535-.143.74-.616.45l-2.654-1.62z" fill="#FFF"/>   </g></g></svg></a></span></div><div class="AuthorInfo-detail" data-reactid="315"><div class="AuthorInfo-badge" data-reactid="316"><div class="AuthorInfo-badgeText" data-reactid="317"><span data-reactid="318"><span data-reactid="319"><a href="/people/Ivony/answers/topic/19554298" data-reactid="320">编程</a><!-- react-text: 321 --> <!-- /react-text --></span><!-- react-text: 322 -->话题<!-- /react-text --></span><!-- react-text: 323 -->的<!-- /react-text --><!-- react-text: 324 -->优秀回答者<!-- /react-text --></div></div></div></div></div><div class="AnswerItem-extraInfo" data-reactid="325"><span class="Voters" data-reactid="326"><button class="Button Button--plain" type="button" data-reactid="327"><!-- react-text: 328 -->241 人赞同了该回答<!-- /react-text --></button><!-- react-empty: 329 --></span></div></div><meta itemprop="image" content="" data-reactid="330"/><meta itemprop="upvoteCount" content="241" data-reactid="331"/><meta itemprop="url" content="https://www.zhihu.com/question/28557115/answer/41265890" data-reactid="332"/><meta itemprop="dateCreated" content="2015-03-06T05:25:25.000Z" data-reactid="333"/><meta itemprop="dateModified" content="2015-03-06T08:11:40.000Z" data-reactid="334"/><meta itemprop="commentCount" content="18" data-reactid="335"/><div class="RichContent RichContent--unescapable" data-reactid="336"><div class="RichContent-inner" data-reactid="337"><span class="RichText CopyrightRichText-richText" itemprop="text" data-reactid="338">就是用URL定位资源，用HTTP描述操作。</span><!-- react-empty: 339 --></div><div data-reactid="340"><div class="ContentItem-time" data-reactid="341"><a target="_blank" href="/question/28557115/answer/41265890" data-reactid="342"><span data-tooltip="发布于 2015-03-06" data-reactid="343"><!-- react-text: 344 -->编辑于 <!-- /react-text --><!-- react-text: 345 -->2015-03-06<!-- /react-text --></span></a></div></div><div class="ContentItem-actions RichContent-actions" data-reactid="346"><span data-reactid="347"><button class="Button VoteButton VoteButton--up" aria-label="赞同" type="button" data-reactid="348"><svg viewBox="0 0 20 18" class="Icon VoteButton-upIcon Icon--triangle" style="height:16px;width:9px;" width="9" height="16" aria-hidden="true" data-reactid="349"><title data-reactid="350"></title><g data-reactid="351"><path d="M0 15.243c0-.326.088-.533.236-.896l7.98-13.204C8.57.57 9.086 0 10 0s1.43.57 1.784 1.143l7.98 13.204c.15.363.236.57.236.896 0 1.386-.875 1.9-1.955 1.9H1.955c-1.08 0-1.955-.517-1.955-1.9z"/></g></svg><!-- react-text: 352 -->241<!-- /react-text --></button><button class="Button VoteButton VoteButton--down" aria-label="反对" type="button" data-reactid="353"><svg viewBox="0 0 20 18" class="Icon VoteButton-downIcon Icon--triangle" style="height:16px;width:9px;" width="9" height="16" aria-hidden="true" data-reactid="354"><title data-reactid="355"></title><g data-reactid="356"><path d="M0 15.243c0-.326.088-.533.236-.896l7.98-13.204C8.57.57 9.086 0 10 0s1.43.57 1.784 1.143l7.98 13.204c.15.363.236.57.236.896 0 1.386-.875 1.9-1.955 1.9H1.955c-1.08 0-1.955-.517-1.955-1.9z"/></g></svg></button></span><button class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel" type="button" data-reactid="357"><span style="display:inline-flex;align-items:center;" data-reactid="358"><!-- react-text: 359 -->​<!-- /react-text --><svg class="Zi Zi--Comment Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="360"><path d="M10.241 19.313a.97.97 0 0 0-.77.2 7.908 7.908 0 0 1-3.772 1.482.409.409 0 0 1-.38-.637 5.825 5.825 0 0 0 1.11-2.237.605.605 0 0 0-.227-.59A7.935 7.935 0 0 1 3 11.25C3 6.7 7.03 3 12 3s9 3.7 9 8.25-4.373 9.108-10.759 8.063z" fill-rule="evenodd" data-reactid="361"></path></svg></span><!-- react-text: 362 -->18 条评论<!-- /react-text --></button><div class="Popover ShareMenu ContentItem-action" data-reactid="363"><div class="" id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="364"><button class="Button Button--plain Button--withIcon Button--withLabel" type="button" data-reactid="365"><span style="display:inline-flex;align-items:center;" data-reactid="366"><!-- react-text: 367 -->​<!-- /react-text --><svg class="Zi Zi--Share Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="368"><path d="M2.931 7.89c-1.067.24-1.275 1.669-.318 2.207l5.277 2.908 8.168-4.776c.25-.127.477.198.273.39L9.05 14.66l.927 5.953c.18 1.084 1.593 1.376 2.182.456l9.644-15.242c.584-.892-.212-2.029-1.234-1.796L2.93 7.89z" fill-rule="evenodd" data-reactid="369"></path></svg></span><!-- react-text: 370 -->分享<!-- /react-text --></button></div><!-- react-empty: 371 --></div><button class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel" type="button" data-reactid="372"><span style="display:inline-flex;align-items:center;" data-reactid="373"><!-- react-text: 374 -->​<!-- /react-text --><svg class="Zi Zi--Star Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="375"><path d="M5.515 19.64l.918-5.355-3.89-3.792c-.926-.902-.639-1.784.64-1.97L8.56 7.74l2.404-4.871c.572-1.16 1.5-1.16 2.072 0L15.44 7.74l5.377.782c1.28.186 1.566 1.068.64 1.97l-3.89 3.793.918 5.354c.219 1.274-.532 1.82-1.676 1.218L12 18.33l-4.808 2.528c-1.145.602-1.896.056-1.677-1.218z" fill-rule="evenodd" data-reactid="376"></path></svg></span><!-- react-text: 377 -->收藏<!-- /react-text --></button><button class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel" type="button" data-reactid="378"><span style="display:inline-flex;align-items:center;" data-reactid="379"><!-- react-text: 380 -->​<!-- /react-text --><svg class="Zi Zi--Heart Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="381"><path d="M2 8.437C2 5.505 4.294 3.094 7.207 3 9.243 3 11.092 4.19 12 6c.823-1.758 2.649-3 4.651-3C19.545 3 22 5.507 22 8.432 22 16.24 13.842 21 12 21 10.158 21 2 16.24 2 8.437z" fill-rule="evenodd" data-reactid="382"></path></svg></span><!-- react-text: 383 -->感谢<!-- /react-text --></button><button class="Button ContentItem-action ContentItem-rightButton Button--plain" data-zop-retract-question="true" type="button" data-reactid="384"><span class="RichContent-collapsedText" data-reactid="385">收起</span><svg viewBox="0 0 10 6" class="Icon ContentItem-arrowIcon is-active Icon--arrow" style="height:16px;width:10px;" width="10" height="16" aria-hidden="true" data-reactid="386"><title data-reactid="387"></title><g data-reactid="388"><path d="M8.716.217L5.002 4 1.285.218C.99-.072.514-.072.22.218c-.294.29-.294.76 0 1.052l4.25 4.512c.292.29.77.29 1.063 0L9.78 1.27c.293-.29.293-.76 0-1.052-.295-.29-.77-.29-1.063 0z"/></g></svg></button></div></div><!-- react-empty: 389 --><!-- react-empty: 390 --><!-- react-empty: 391 --><!-- react-empty: 392 --><!-- react-empty: 393 --><!-- react-empty: 394 --></div></div><!-- react-empty: 395 --><div data-reactid="396"></div></div></div></div></div></div></div></div><!-- react-empty: 397 --></div><!-- react-empty: 398 --><div class="KanshanDiversion" data-reactid="399"><!-- react-empty: 400 --></div></div></main><!-- react-empty: 401 --><!-- react-empty: 402 --><!-- react-empty: 403 --><!-- react-empty: 404 --></div></div><div id="data" style="display:none;" data-state="{&quot;loading&quot;:{&quot;global&quot;:{&quot;count&quot;:0},&quot;local&quot;:{&quot;token/&quot;:false,&quot;env/getExperiments/&quot;:false,&quot;config/getAppConfig/&quot;:false,&quot;question/get/&quot;:false,&quot;question/getAnswers/28557115&quot;:false}},&quot;entities&quot;:{&quot;users&quot;:{},&quot;questions&quot;:{&quot;28557115&quot;:{&quot;status&quot;:{&quot;isLocked&quot;:false,&quot;isClose&quot;:false,&quot;isEvaluate&quot;:false,&quot;isSuggest&quot;:false},&quot;relationship&quot;:{&quot;concernedFollowers&quot;:[],&quot;isAnonymous&quot;:false,&quot;canLock&quot;:false,&quot;isFollowing&quot;:false,&quot;isAuthor&quot;:false,&quot;canCollapseAnswers&quot;:false,&quot;canStickAnswers&quot;:false},&quot;isMuted&quot;:false,&quot;topics&quot;:[{&quot;introduction&quot;:&quot;计算机网络( &lt;a href=\&quot;http://www.wikiwand.com/en/Computer_Networks\&quot; data-editable=\&quot;true\&quot; data-title=\&quot;Computer Networks\&quot;&gt;Computer Networks&lt;/a&gt; )指将地理位置不同的多台计算机及其外部设备，通过通信线路连接起来，在网络操作系统及网络通信协议的管理和协调下，实现资源共享和信息传递的计算机系统。&quot;,&quot;avatarUrl&quot;:&quot;https://pic2.zhimg.com/e0bd139b2_is.jpg&quot;,&quot;name&quot;:&quot;计算机网络&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/topics/19572894&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;计算机网络( Computer Networks )指将地理位置不同的多台计算机及其外部设备，通过通信线路连接起来，在网络操作系统及网络通信协议的管理和协调下，实现资源共享和信息传递的计算机系统。&quot;,&quot;id&quot;:&quot;19572894&quot;},{&quot;introduction&quot;:&quot;&quot;,&quot;avatarUrl&quot;:&quot;https://pic2.zhimg.com/v2-e59b65dffb99b659474ee6f636d74913_is.jpg&quot;,&quot;name&quot;:&quot;RESTful&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/topics/19579308&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;&quot;,&quot;id&quot;:&quot;19579308&quot;},{&quot;introduction&quot;:&quot;面向服务的前后端通信标准&lt;br&gt;Not React&quot;,&quot;avatarUrl&quot;:&quot;https://pic3.zhimg.com/e82bab09c_is.jpg&quot;,&quot;name&quot;:&quot;REST&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/topics/19579857&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;面向服务的前后端通信标准 Not React&quot;,&quot;id&quot;:&quot;19579857&quot;},{&quot;introduction&quot;:&quot;&quot;,&quot;avatarUrl&quot;:&quot;https://pic3.zhimg.com/e82bab09c_is.jpg&quot;,&quot;name&quot;:&quot;网络架构&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/topics/19582876&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;&quot;,&quot;id&quot;:&quot;19582876&quot;}],&quot;excerpt&quot;:&quot;看了网上好多对REST的介绍，非常理论，让人很难耐着性子看完。即使看完了，还是会云里雾里，不知所云。 了解了什么是REST，我们再看看RESTful的实现。最近，使用 RPC 样式架构构建的基于 SOAP 的 Web 服务成为实现 SOA 最常用的方法。RPC 样式的 Web 服务客户端将一个装满数据的信封（包括方法和参数信息）通过 HTTP 发送到服务器。服务器打开信封并使用传入参数执行指定的方法。方法的结果打包到一个信封并作为响应发回客户端。…&quot;,&quot;adminClosedComment&quot;:false,&quot;isEditable&quot;:false,&quot;reviewInfo&quot;:{&quot;type&quot;:&quot;&quot;,&quot;tips&quot;:&quot;&quot;,&quot;editTips&quot;:&quot;&quot;,&quot;isReviewing&quot;:false},&quot;answerCount&quot;:50,&quot;editableDetail&quot;:&quot;看了网上好多对REST的介绍，非常理论，让人很难耐着性子看完。即使看完了，还是会云里雾里，不知所云。&lt;br&gt;&lt;blockquote&gt;了解了什么是REST，我们再看看RESTful的实现。最近，使用 RPC 样式架构构建的基于 SOAP 的 Web 服务成为实现 SOA 最常用的方法。RPC 样式的 Web 服务客户端将一个装满数据的信封（包括方法和参数信息）通过 HTTP 发送到服务器。服务器打开信封并使用传入参数执行指定的方法。方法的结果打包到一个信封并作为响应发回客户端。客户端收到响应并打开信封。每个对象都有自己独特的方法以及仅公开一个 URI 的 RPC 样式 Web 服务，URI 表示单个端点。它忽略 HTTP 的大部分特性且仅支持 POST 方法。&lt;/blockquote&gt;比如上面这一段，感觉完全像是在写学术论文，要有一定的专业基础才可以理解个大概。&lt;br&gt;&lt;br&gt;请问怎样用通俗的语言解释什么是REST，以及RESTful？&lt;br&gt;如果有例子作为对比就太好了。&quot;,&quot;visitCount&quot;:337156,&quot;id&quot;:28557115,&quot;collapsedAnswerCount&quot;:1,&quot;author&quot;:{&quot;avatarUrlTemplate&quot;:&quot;https://pic3.zhimg.com/054498545_{size}.jpg&quot;,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;李小起&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/people/0462afb7a43d15ac2fef91b9dca6f8cf&quot;,&quot;gender&quot;:1,&quot;userType&quot;:&quot;people&quot;,&quot;urlToken&quot;:&quot;li-xiao-qi-55&quot;,&quot;isAdvertiser&quot;:false,&quot;avatarUrl&quot;:&quot;https://pic3.zhimg.com/054498545_is.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;headline&quot;:&quot;迷茫者&quot;,&quot;badge&quot;:[],&quot;id&quot;:&quot;0462afb7a43d15ac2fef91b9dca6f8cf&quot;},&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/questions/28557115&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;created&quot;:1425612583,&quot;detail&quot;:&quot;看了网上好多对REST的介绍，非常理论，让人很难耐着性子看完。即使看完了，还是会云里雾里，不知所云。&lt;br&gt;&lt;blockquote&gt;了解了什么是REST，我们再看看RESTful的实现。最近，使用 RPC 样式架构构建的基于 SOAP 的 Web 服务成为实现 SOA 最常用的方法。RPC 样式的 Web 服务客户端将一个装满数据的信封（包括方法和参数信息）通过 HTTP 发送到服务器。服务器打开信封并使用传入参数执行指定的方法。方法的结果打包到一个信封并作为响应发回客户端。客户端收到响应并打开信封。每个对象都有自己独特的方法以及仅公开一个 URI 的 RPC 样式 Web 服务，URI 表示单个端点。它忽略 HTTP 的大部分特性且仅支持 POST 方法。&lt;/blockquote&gt;比如上面这一段，感觉完全像是在写学术论文，要有一定的专业基础才可以理解个大概。&lt;br&gt;&lt;br&gt;请问怎样用通俗的语言解释什么是REST，以及RESTful？&lt;br&gt;如果有例子作为对比就太好了。&quot;,&quot;updatedTime&quot;:1494333336,&quot;hasPublishingDraft&quot;:false,&quot;commentCount&quot;:5,&quot;questionType&quot;:&quot;normal&quot;,&quot;followerCount&quot;:3249,&quot;title&quot;:&quot;怎样用通俗的语言解释REST，以及RESTful？&quot;,&quot;canComment&quot;:{&quot;status&quot;:true,&quot;reason&quot;:&quot;&quot;},&quot;type&quot;:&quot;question&quot;,&quot;isNormal&quot;:true}},&quot;answers&quot;:{&quot;41265890&quot;:{&quot;relevantInfo&quot;:{&quot;isRelevant&quot;:false},&quot;suggestEdit&quot;:{&quot;status&quot;:false,&quot;reason&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;,&quot;url&quot;:&quot;&quot;,&quot;unnormalDetails&quot;:{},&quot;tip&quot;:&quot;&quot;},&quot;relationship&quot;:{&quot;upvotedFollowees&quot;:[],&quot;isAuthor&quot;:false,&quot;isNothelp&quot;:false,&quot;isAuthorized&quot;:false,&quot;voting&quot;:0,&quot;isThanked&quot;:false},&quot;editableContent&quot;:&quot;&quot;,&quot;markInfos&quot;:[],&quot;excerpt&quot;:&quot;就是用URL定位资源，用HTTP描述操作。&quot;,&quot;annotationAction&quot;:[],&quot;adminClosedComment&quot;:false,&quot;collapsedBy&quot;:&quot;nobody&quot;,&quot;canComment&quot;:{&quot;status&quot;:true,&quot;reason&quot;:&quot;&quot;},&quot;createdTime&quot;:1425619525,&quot;id&quot;:41265890,&quot;voteupCount&quot;:241,&quot;collapseReason&quot;:&quot;&quot;,&quot;isCollapsed&quot;:false,&quot;isSticky&quot;:false,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/answers/41265890&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;author&quot;:{&quot;avatarUrlTemplate&quot;:&quot;https://pic4.zhimg.com/23a5bca736788ab73e3bd58e56761cda_{size}.jpg&quot;,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;Ivony&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/people/6ef2e77274cb0719253a577665cf690e&quot;,&quot;gender&quot;:1,&quot;userType&quot;:&quot;people&quot;,&quot;urlToken&quot;:&quot;Ivony&quot;,&quot;isAdvertiser&quot;:false,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/23a5bca736788ab73e3bd58e56761cda_is.jpg&quot;,&quot;isOrg&quot;:false,&quot;headline&quot;:&quot;大隐隐知乎&quot;,&quot;followerCount&quot;:65441,&quot;badge&quot;:[{&quot;topics&quot;:[{&quot;introduction&quot;:&quot;人们为了让计算机解决各种棘手的问题，使用编程语言&lt;b&gt;编写程序代码&lt;/b&gt;并通过计算机运算得到最终结果的过程。&quot;,&quot;avatarUrl&quot;:&quot;https://pic2.zhimg.com/v2-4030982b9aed71d12b350a4c3ba5078d_is.jpg&quot;,&quot;name&quot;:&quot;编程&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/topics/19554298&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;人们为了让计算机解决各种棘手的问题，使用编程语言编写程序代码并通过计算机运算得到最终结果的过程。&quot;,&quot;id&quot;:&quot;19554298&quot;}],&quot;type&quot;:&quot;best_answerer&quot;,&quot;description&quot;:&quot;优秀回答者&quot;}],&quot;id&quot;:&quot;6ef2e77274cb0719253a577665cf690e&quot;},&quot;question&quot;:{&quot;questionType&quot;:&quot;normal&quot;,&quot;title&quot;:&quot;怎样用通俗的语言解释REST，以及RESTful？&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/questions/28557115&quot;,&quot;created&quot;:1425612583,&quot;type&quot;:&quot;question&quot;,&quot;id&quot;:28557115,&quot;updatedTime&quot;:1494333336},&quot;updatedTime&quot;:1425629500,&quot;content&quot;:&quot;就是用URL定位资源，用HTTP描述操作。&quot;,&quot;commentCount&quot;:18,&quot;extras&quot;:&quot;&quot;,&quot;reshipmentSettings&quot;:&quot;allowed&quot;,&quot;rewardInfo&quot;:{&quot;rewardMemberCount&quot;:0,&quot;isRewardable&quot;:false,&quot;rewardTotalMoney&quot;:0,&quot;canOpenReward&quot;:false,&quot;tagline&quot;:&quot;&quot;},&quot;isCopyable&quot;:true,&quot;type&quot;:&quot;answer&quot;,&quot;thumbnail&quot;:&quot;&quot;,&quot;isNormal&quot;:true},&quot;41267240&quot;:{&quot;relevantInfo&quot;:{&quot;isRelevant&quot;:false},&quot;suggestEdit&quot;:{&quot;status&quot;:false,&quot;reason&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;,&quot;url&quot;:&quot;&quot;,&quot;unnormalDetails&quot;:{},&quot;tip&quot;:&quot;&quot;},&quot;relationship&quot;:{&quot;upvotedFollowees&quot;:[],&quot;isAuthor&quot;:false,&quot;isNothelp&quot;:false,&quot;isAuthorized&quot;:false,&quot;voting&quot;:0,&quot;isThanked&quot;:false},&quot;editableContent&quot;:&quot;&quot;,&quot;markInfos&quot;:[],&quot;excerpt&quot;:&quot;看Url就知道要什么 看http method就知道干什么 看http status code就知道结果如何&quot;,&quot;annotationAction&quot;:[],&quot;adminClosedComment&quot;:false,&quot;collapsedBy&quot;:&quot;nobody&quot;,&quot;canComment&quot;:{&quot;status&quot;:true,&quot;reason&quot;:&quot;&quot;},&quot;createdTime&quot;:1425620366,&quot;id&quot;:41267240,&quot;voteupCount&quot;:460,&quot;collapseReason&quot;:&quot;&quot;,&quot;isCollapsed&quot;:false,&quot;isSticky&quot;:false,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/answers/41267240&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;author&quot;:{&quot;avatarUrlTemplate&quot;:&quot;https://pic4.zhimg.com/da8e974dc_{size}.jpg&quot;,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;徐磊&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/people/08a649c28ec2a930c1fb1f3ac2ab20de&quot;,&quot;gender&quot;:1,&quot;userType&quot;:&quot;people&quot;,&quot;urlToken&quot;:&quot;xu-lei-69-24&quot;,&quot;isAdvertiser&quot;:false,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/da8e974dc_is.jpg&quot;,&quot;isOrg&quot;:false,&quot;headline&quot;:&quot;祖传烂代码，专克架构师！今天没带刀我他妈就放过你！&quot;,&quot;followerCount&quot;:86,&quot;badge&quot;:[],&quot;id&quot;:&quot;08a649c28ec2a930c1fb1f3ac2ab20de&quot;},&quot;question&quot;:{&quot;questionType&quot;:&quot;normal&quot;,&quot;title&quot;:&quot;怎样用通俗的语言解释REST，以及RESTful？&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/questions/28557115&quot;,&quot;created&quot;:1425612583,&quot;type&quot;:&quot;question&quot;,&quot;id&quot;:28557115,&quot;updatedTime&quot;:1494333336},&quot;updatedTime&quot;:1425620366,&quot;content&quot;:&quot;看Url就知道要什么&lt;br&gt;看http method就知道干什么&lt;br&gt;看http status  code就知道结果如何&quot;,&quot;commentCount&quot;:26,&quot;extras&quot;:&quot;&quot;,&quot;reshipmentSettings&quot;:&quot;allowed&quot;,&quot;rewardInfo&quot;:{&quot;rewardMemberCount&quot;:0,&quot;isRewardable&quot;:false,&quot;rewardTotalMoney&quot;:0,&quot;canOpenReward&quot;:false,&quot;tagline&quot;:&quot;&quot;},&quot;isCopyable&quot;:true,&quot;type&quot;:&quot;answer&quot;,&quot;thumbnail&quot;:&quot;&quot;,&quot;isNormal&quot;:true},&quot;48094438&quot;:{&quot;relevantInfo&quot;:{&quot;isRelevant&quot;:false},&quot;suggestEdit&quot;:{&quot;status&quot;:false,&quot;reason&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;,&quot;url&quot;:&quot;&quot;,&quot;unnormalDetails&quot;:{},&quot;tip&quot;:&quot;&quot;},&quot;relationship&quot;:{&quot;upvotedFollowees&quot;:[],&quot;isAuthor&quot;:false,&quot;isNothelp&quot;:false,&quot;isAuthorized&quot;:false,&quot;voting&quot;:0,&quot;isThanked&quot;:false},&quot;editableContent&quot;:&quot;&quot;,&quot;markInfos&quot;:[],&quot;excerpt&quot;:&quot;我觉得问题很好：REST -- REpresentational State Transfer 直接翻译：表现层状态转移。这个中文直译经常出现在很多博客中。尼玛谁听得懂“表现层状态转移”？这是人话吗？我自己也困惑了很久，查询了很多资料，花了差不多一年有个还算清晰的理解。分享如下…&quot;,&quot;annotationAction&quot;:[],&quot;adminClosedComment&quot;:false,&quot;collapsedBy&quot;:&quot;nobody&quot;,&quot;canComment&quot;:{&quot;status&quot;:true,&quot;reason&quot;:&quot;&quot;},&quot;createdTime&quot;:1431861233,&quot;id&quot;:48094438,&quot;voteupCount&quot;:1502,&quot;collapseReason&quot;:&quot;&quot;,&quot;isCollapsed&quot;:false,&quot;isSticky&quot;:false,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/answers/48094438&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;author&quot;:{&quot;avatarUrlTemplate&quot;:&quot;https://pic4.zhimg.com/d377edfcb_{size}.jpg&quot;,&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;覃超&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/people/7407795460968de9aa7f60d890b29c39&quot;,&quot;gender&quot;:1,&quot;userType&quot;:&quot;people&quot;,&quot;urlToken&quot;:&quot;qin.chao&quot;,&quot;isAdvertiser&quot;:false,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/d377edfcb_is.jpg&quot;,&quot;isOrg&quot;:false,&quot;headline&quot;:&quot;曾经沧海难为水的Facebook早期员工&quot;,&quot;followerCount&quot;:144392,&quot;badge&quot;:[{&quot;topics&quot;:[{&quot;introduction&quot;:&quot;互联网（英语：Internet），是网络与网络之间所串连成的庞大网络，这些网络以一组标准的网络TCP/IP协议族相连，链接全世界几十亿个设备，形成逻辑上的单一巨大国际网络。这是一个网络的网络，它是由从地方到全球范围内几百万个私人的，学术界的，企业的和政府的网络所构成，通过电子，无线和光纤网络技术等等一系列广泛的技术联系在一起.这种将计算机网络互相联接在一起的方法可称作“网络互联”，在这基础上发展出覆盖全世界的全球性互联网络称互联网，即是互相连接一起的网络。&quot;,&quot;avatarUrl&quot;:&quot;https://pic6.zhimg.com/f07808da5625fef3607f8b75b770349f_is.jpg&quot;,&quot;name&quot;:&quot;互联网&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/topics/19550517&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;互联网（英语：Internet），是网络与网络之间所串连成的庞大网络，这些网络以一组标准的网络TCP/IP协议族相连，链接全世界几十亿个设备，形成逻辑上的单一巨大国际网络。这是一个网络的网络，它是由从地方到全球范围内几百万个私人的，学术界的，企业的和政府的网络所构成，通过电子，无线和光纤网络技术等等一系列广泛的技术联系在一起.这种将计算机网络互相联接在一起的方法可称作“网络互联”，在这基础上发展出覆盖全世界的…&quot;,&quot;id&quot;:&quot;19550517&quot;},{&quot;introduction&quot;:&quot;程序员可以指在程序设计与互联网某个专业领域中的专业人士或是从事软件撰写，程序开发、维护的专业人员。&quot;,&quot;avatarUrl&quot;:&quot;https://pic2.zhimg.com/acda162ad89c9b8995b51028d5233d1a_is.jpg&quot;,&quot;name&quot;:&quot;程序员&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/topics/19552330&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;程序员可以指在程序设计与互联网某个专业领域中的专业人士或是从事软件撰写，程序开发、维护的专业人员。&quot;,&quot;id&quot;:&quot;19552330&quot;}],&quot;type&quot;:&quot;best_answerer&quot;,&quot;description&quot;:&quot;优秀回答者&quot;}],&quot;id&quot;:&quot;7407795460968de9aa7f60d890b29c39&quot;},&quot;question&quot;:{&quot;questionType&quot;:&quot;normal&quot;,&quot;title&quot;:&quot;怎样用通俗的语言解释REST，以及RESTful？&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/questions/28557115&quot;,&quot;created&quot;:1425612583,&quot;type&quot;:&quot;question&quot;,&quot;id&quot;:28557115,&quot;updatedTime&quot;:1494333336},&quot;updatedTime&quot;:1431870649,&quot;content&quot;:&quot;我觉得问题很好：REST -- REpresentational State Transfer 直接翻译：表现层状态转移。这个中文直译经常出现在很多博客中。尼玛谁听得懂“表现层状态转移”？这是人话吗？我自己也困惑了很久，查询了很多资料，花了差不多一年有个还算清晰的理解。分享如下：&lt;br&gt;&lt;br&gt;&lt;a data-hash=\&quot;6ef2e77274cb0719253a577665cf690e\&quot; href=\&quot;https://www.zhihu.com/people/6ef2e77274cb0719253a577665cf690e\&quot; class=\&quot;member_mention\&quot; data-editable=\&quot;true\&quot; data-title=\&quot;@Ivony\&quot; data-hovercard=\&quot;p$b$6ef2e77274cb0719253a577665cf690e\&quot;&gt;@Ivony&lt;/a&gt; 老师的一句话概括很精辟：&lt;br&gt;&lt;b&gt;URL定位资源，用HTTP动词（GET,POST,DELETE,DETC）描述操作。&lt;br&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;--- 简洁版 ---&lt;/b&gt;&lt;br&gt;&lt;br&gt;0. REST不是\&quot;rest\&quot;这个单词，而是几个单词缩写。但即使那几个单词说出来，也无法理解在说什么 -_-!! （不是要贬低人，是我自己也理解困难）；&lt;br&gt;1. REST描述的是在网络中client和server的一种交互形式；REST本身不实用，实用的是如何设计 RESTful API（REST风格的网络接口）；&lt;br&gt;2. Server提供的RESTful API中，URL中只使用名词来指定资源，原则上不使用动词。“资源”是REST架构或者说整个网络处理的核心。比如：&lt;br&gt;&lt;a href=\&quot;https://link.zhihu.com/?target=http%3A//api.qc.com/v1/newsfeed\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;api.qc.com/v1/newsfeed&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;&lt;/span&gt;&lt;/a&gt;: 获取某人的新鲜; &lt;br&gt;&lt;a href=\&quot;https://link.zhihu.com/?target=http%3A//api.qc.com/v1/friends\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;api.qc.com/v1/friends&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;&lt;/span&gt;&lt;/a&gt;: 获取某人的好友列表;&lt;br&gt;&lt;a href=\&quot;https://link.zhihu.com/?target=http%3A//api.qc.com/v1/profile\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;api.qc.com/v1/profile&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;&lt;/span&gt;&lt;/a&gt;: 获取某人的详细信息;3. 用HTTP协议里的动词来实现资源的添加，修改，删除等操作。即通过HTTP动词来实现资源的状态扭转：&lt;br&gt;GET    用来获取资源，&lt;br&gt;POST  用来新建资源（也可以用于更新资源），&lt;br&gt;PUT    用来更新资源，&lt;br&gt;DELETE  用来删除资源。比如：&lt;br&gt;DELETE &lt;a href=\&quot;https://link.zhihu.com/?target=http%3A//api.qc.com/v1/friends\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;http://api.qc.com/v1/&lt;/a&gt;friends: 删除某人的好友 （在http parameter指定好友id）&lt;br&gt;POST &lt;a href=\&quot;https://link.zhihu.com/?target=http%3A//api.qc.com/v1/friends\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;http://api.qc.com/v1/&lt;/a&gt;friends: 添加好友&lt;br&gt;UPDATE &lt;a href=\&quot;https://link.zhihu.com/?target=http%3A//api.qc.com/v1/profile\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;api.qc.com/v1/profile&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;&lt;/span&gt;&lt;/a&gt;: 更新个人资料&lt;br&gt;&lt;br&gt;禁止使用： GET &lt;a href=\&quot;https://link.zhihu.com/?target=http%3A//api.qc.com/v1/deleteFriend\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;api.qc.com/v1/deleteFri&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;end&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt; 图例：&lt;br&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=\&quot;https://pic2.zhimg.com/50/7405939b62a73f28846533de08db3a80_hd.jpg\&quot; data-rawwidth=\&quot;1328\&quot; data-rawheight=\&quot;702\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;1328\&quot; data-original=\&quot;https://pic2.zhimg.com/7405939b62a73f28846533de08db3a80_r.jpg\&quot;&gt;&lt;/noscript&gt;&lt;img src=\&quot;data:image/svg+xml;utf8,&amp;lt;svg%20xmlns=&#x27;http://www.w3.org/2000/svg&#x27;%20width=&#x27;1328&#x27;%20height=&#x27;702&#x27;&amp;gt;&amp;lt;/svg&amp;gt;\&quot; data-rawwidth=\&quot;1328\&quot; data-rawheight=\&quot;702\&quot; class=\&quot;origin_image zh-lightbox-thumb lazy\&quot; width=\&quot;1328\&quot; data-original=\&quot;https://pic2.zhimg.com/7405939b62a73f28846533de08db3a80_r.jpg\&quot; data-actualsrc=\&quot;https://pic2.zhimg.com/50/7405939b62a73f28846533de08db3a80_hd.jpg\&quot;&gt;&lt;/figure&gt;&lt;br&gt;4. Server和Client之间传递某资源的一个表现形式，比如用JSON，XML传输文本，或者用JPG，WebP传输图片等。当然还可以压缩HTTP传输时的数据（on-wire data compression）。&lt;br&gt;5. 用 HTTP Status Code传递Server的状态信息。比如最常用的 200 表示成功，500 表示Server内部错误等。&lt;br&gt;&lt;br&gt;主要信息就这么点。最后是要解放思想，Web端不再用之前典型的PHP或JSP架构，而是改为前段渲染和附带处理简单的商务逻辑（比如AngularJS或者BackBone的一些样例）。Web端和Server只使用上述定义的API来传递数据和改变数据状态。格式一般是JSON。iOS和Android同理可得。由此可见，Web，iOS，Android和第三方开发者变为平等的角色通过一套API来共同消费Server提供的服务。&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;--- 详细版 ---&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;先说REST名称&lt;/b&gt;&lt;br&gt;REST -- REpresentational State Transfer&lt;br&gt;首先，之所以晦涩是因为前面主语被去掉了，全称是 Resource Representational State Transfer：通俗来讲就是：资源在网络中以某种表现形式进行状态转移。分解开来：&lt;br&gt;Resource：资源，即数据（前面说过网络的核心）。比如 newsfeed，friends等；&lt;br&gt;Representational：某种表现形式，比如用JSON，XML，JPEG等；&lt;br&gt;State Transfer：状态变化。通过HTTP动词实现。&lt;br&gt;&lt;b&gt;REST的出处&lt;/b&gt;&lt;br&gt;Roy Fielding的毕业论文。这哥们参与设计HTTP协议，也是Apache Web Server项目（可惜现在已经是 nginx 的天下）的co-founder。PhD的毕业学校是 UC Irvine，Irvine在加州，有着充裕的阳光和美丽的海滩，是著名的富人区。Oculus VR 的总部就坐落于此（虚拟现实眼镜，被FB收购，CTO为Quake和Doom的作者 John Carmack）。&lt;br&gt;众说周知，论文都是晦涩难懂的。当年在CMU读书的时候，很多课程都会安排每周两篇的Paper review。现在回想起来每次写Paper review都是我最为痛苦的时候。REST这篇博士论文毫无疑问更甚。&lt;br&gt;论文地址：&lt;a href=\&quot;https://link.zhihu.com/?target=http%3A//www.ics.uci.edu/%7Efielding/pubs/dissertation/top.htm\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;Architectural Styles and the Design of Network-based Software Architectures&lt;/a&gt;&lt;br&gt;REST章节：&lt;a href=\&quot;https://link.zhihu.com/?target=http%3A//www.ics.uci.edu/%7Efielding/pubs/dissertation/rest_arch_style.htm\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;Fielding Dissertation: CHAPTER 5: Representational State Transfer (REST)&lt;/a&gt;&lt;br&gt;REST那章我初读了，整个论文没有读完 =_=&lt;br&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=\&quot;https://pic1.zhimg.com/50/11cdfc60bde58e8545bafe42f0af79ca_hd.jpg\&quot; data-rawwidth=\&quot;500\&quot; data-rawheight=\&quot;375\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;500\&quot; data-original=\&quot;https://pic1.zhimg.com/11cdfc60bde58e8545bafe42f0af79ca_r.jpg\&quot;&gt;&lt;/noscript&gt;&lt;img src=\&quot;data:image/svg+xml;utf8,&amp;lt;svg%20xmlns=&#x27;http://www.w3.org/2000/svg&#x27;%20width=&#x27;500&#x27;%20height=&#x27;375&#x27;&amp;gt;&amp;lt;/svg&amp;gt;\&quot; data-rawwidth=\&quot;500\&quot; data-rawheight=\&quot;375\&quot; class=\&quot;origin_image zh-lightbox-thumb lazy\&quot; width=\&quot;500\&quot; data-original=\&quot;https://pic1.zhimg.com/11cdfc60bde58e8545bafe42f0af79ca_r.jpg\&quot; data-actualsrc=\&quot;https://pic1.zhimg.com/50/11cdfc60bde58e8545bafe42f0af79ca_hd.jpg\&quot;&gt;&lt;/figure&gt;&lt;br&gt;&lt;b&gt;RESTful API&lt;/b&gt;&lt;br&gt;实用的是如何正确地理解 RESTful架构和设计好RESTful API。&lt;br&gt;&lt;br&gt;&lt;b&gt;首先为什么要用RESTful结构呢？&lt;/b&gt;&lt;br&gt;大家都知道\&quot;古代\&quot;网页是前端后端融在一起的，比如之前的PHP，JSP等。在之前的桌面时代问题不大，但是近年来移动互联网的发展，各种类型的Client层出不穷，RESTful可以通过一套统一的接口为 Web，iOS和Android提供服务。另外对于广大平台来说，比如Facebook platform，微博开放平台，微信公共平台等，它们不需要有显式的前端，只需要一套提供服务的接口，于是RESTful更是它们最好的选择。在RESTful架构下：&lt;br&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=\&quot;https://pic4.zhimg.com/50/06ee404783540f0af299042057738a99_hd.jpg\&quot; data-rawwidth=\&quot;550\&quot; data-rawheight=\&quot;250\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;550\&quot; data-original=\&quot;https://pic4.zhimg.com/06ee404783540f0af299042057738a99_r.jpg\&quot;&gt;&lt;/noscript&gt;&lt;img src=\&quot;data:image/svg+xml;utf8,&amp;lt;svg%20xmlns=&#x27;http://www.w3.org/2000/svg&#x27;%20width=&#x27;550&#x27;%20height=&#x27;250&#x27;&amp;gt;&amp;lt;/svg&amp;gt;\&quot; data-rawwidth=\&quot;550\&quot; data-rawheight=\&quot;250\&quot; class=\&quot;origin_image zh-lightbox-thumb lazy\&quot; width=\&quot;550\&quot; data-original=\&quot;https://pic4.zhimg.com/06ee404783540f0af299042057738a99_r.jpg\&quot; data-actualsrc=\&quot;https://pic4.zhimg.com/50/06ee404783540f0af299042057738a99_hd.jpg\&quot;&gt;&lt;/figure&gt;&lt;br&gt;&lt;b&gt;Server的API如何设计才满足RESTful要求?&lt;/b&gt;&lt;br&gt;首先是简洁版里面的那几点。外加一些附带的 best practices：&lt;br&gt;1. URL root:&lt;br&gt;&lt;a href=\&quot;https://link.zhihu.com/?target=https%3A//example.org/api/v1/\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;example.org/api/v1/&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;&lt;/span&gt;&lt;/a&gt;*&lt;br&gt;&lt;a href=\&quot;https://link.zhihu.com/?target=https%3A//api.example.com/v1/\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;https://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;api.example.com/v1/&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;&lt;/span&gt;&lt;/a&gt;*2. API versioning:&lt;br&gt;可以放在URL里面，也可以用HTTP的header：&lt;br&gt;/api/v1/&lt;br&gt;3. URI使用名词而不是动词，且推荐用复数。&lt;br&gt;BAD&lt;br&gt;&lt;ul&gt;&lt;li&gt;/getProducts&lt;/li&gt;&lt;li&gt;/listOrders&lt;/li&gt;&lt;li&gt;/retrieveClientByOrder?orderId=1&lt;/li&gt;&lt;/ul&gt;GOOD&lt;br&gt;&lt;ul&gt;&lt;li&gt;GET /products : will return the list of all products&lt;/li&gt;&lt;li&gt;POST /products : will add a product to the collection&lt;/li&gt;&lt;li&gt;GET /products/4 : will retrieve product #4&lt;/li&gt;&lt;li&gt;PATCH/PUT /products/4 : will update product #4&lt;/li&gt;&lt;/ul&gt;4. 保证  HEAD 和 GET 方法是安全的，不会对资源状态有所改变（污染）。比如严格杜绝如下情况：&lt;br&gt;GET /deleteProduct?id=1&lt;br&gt;5. 资源的地址推荐用嵌套结构。比如：&lt;br&gt;GET /friends/10375923/profile&lt;br&gt;UPDATE /profile/primaryAddress/city6. 警惕返回结果的大小。如果过大，及时进行分页（pagination）或者加入限制（limit）。HTTP协议支持分页（Pagination）操作，在Header中使用 Link 即可。&lt;br&gt;7. 使用正确的HTTP Status Code表示访问状态：&lt;a href=\&quot;https://link.zhihu.com/?target=http%3A//www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;HTTP/1.1: Status Code Definitions&lt;/a&gt;&lt;br&gt;8. 在返回结果用明确易懂的文本（String。注意返回的错误是要给人看的，避免用 1001 这种错误信息），而且适当地加入注释。&lt;br&gt;9. 关于安全：自己的接口就用https，加上一个key做一次hash放在最后即可。考虑到国情，HTTPS在无线网络里不稳定，可以使用Application Level的加密手段把整个HTTP的payload加密。有兴趣的朋友可以用手机连上电脑的共享Wi-Fi，然后用Charles监听微信的网络请求（发照片或者刷朋友圈）。&lt;br&gt;如果是平台的API，可以用成熟但是复杂的OAuth2，新浪微博这篇：&lt;a href=\&quot;https://link.zhihu.com/?target=http%3A//open.weibo.com/wiki/%25E6%258E%2588%25E6%259D%2583%25E6%259C%25BA%25E5%2588%25B6%25E8%25AF%25B4%25E6%2598%258E\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;授权机制说明&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;各端的具体实现&lt;/b&gt;&lt;br&gt;如上面的图所示，Server统一提供一套RESTful API，web+ios+android作为同等公民调用API。各端发展到现在，都有一套比较成熟的框架来帮开发者事半功倍。&lt;br&gt;&lt;br&gt;-- Server --&lt;br&gt;推荐： Spring MVC 或者 Jersey 或者 Play Framework&lt;br&gt;教程：&lt;br&gt;&lt;a href=\&quot;https://link.zhihu.com/?target=https%3A//spring.io/guides/gs/rest-service/\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;Getting Started · Building a RESTful Web Service&lt;/a&gt;&lt;br&gt;&lt;br&gt;-- Android --&lt;br&gt;推荐： RetroFit ( &lt;a href=\&quot;https://link.zhihu.com/?target=http%3A//square.github.io/retrofit/\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;Retrofit&lt;/a&gt; ) 或者 Volley ( &lt;a href=\&quot;https://link.zhihu.com/?target=https%3A//github.com/mcxiaoke/android-volley\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;mcxiaoke/android-volley · GitHub&lt;/a&gt; Google官方的被block，就不贴了 ) &lt;br&gt;教程：&lt;br&gt;&lt;a href=\&quot;https://link.zhihu.com/?target=https%3A//futurestud.io/blog/retrofit-getting-started-and-android-client/\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;Retrofit โ Getting Started and Create an Android Client&lt;/a&gt;&lt;br&gt;&lt;a href=\&quot;https://link.zhihu.com/?target=http%3A//www.cnblogs.com/angeldevil/p/3757335.html\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;快速Android开发系列网络篇之Retrofit&lt;/a&gt;&lt;br&gt;&lt;br&gt;-- iOS --&lt;br&gt;推荐：RestKit ( &lt;a href=\&quot;https://link.zhihu.com/?target=https%3A//github.com/RestKit/RestKit\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;RestKit/RestKit · GitHub&lt;/a&gt; )&lt;br&gt;教程：&lt;br&gt;&lt;a href=\&quot;https://link.zhihu.com/?target=http%3A//code.tutsplus.com/tutorials/restkit_ios-sdk--mobile-4524\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;Developing RESTful iOS Apps with RestKit&lt;/a&gt;&lt;br&gt;&lt;br&gt;-- Web --&lt;br&gt;推荐随便搞！可以用重量级的AngularJS，也可以用轻量级 Backbone + jQuery 等。&lt;br&gt;教程：&lt;a href=\&quot;https://link.zhihu.com/?target=http%3A//blog.javachen.com/2015/01/06/build-app-with-spring-boot-and-gradle/\&quot; class=\&quot; external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;&lt;span class=\&quot;invisible\&quot;&gt;http://&lt;/span&gt;&lt;span class=\&quot;visible\&quot;&gt;blog.javachen.com/2015/&lt;/span&gt;&lt;span class=\&quot;invisible\&quot;&gt;01/06/build-app-with-spring-boot-and-gradle/&lt;/span&gt;&lt;span class=\&quot;ellipsis\&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;参考：&lt;br&gt;[1]: &lt;a href=\&quot;https://link.zhihu.com/?target=http%3A//bourgeois.me/rest/\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;Some REST best practices&lt;/a&gt;&lt;br&gt;[2]: &lt;a href=\&quot;https://link.zhihu.com/?target=https%3A//developer.github.com/v3/\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;GitHub API v3&lt;/a&gt;&lt;br&gt;[3]: &lt;a href=\&quot;https://link.zhihu.com/?target=https%3A//github.com/tlhunter/consumer-centric-api-design\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;tlhunter/consumer-centric-api-design · GitHub&lt;/a&gt;&lt;br&gt;&lt;br&gt;最后附带一个彩蛋：&lt;br&gt;Facebook台球表演: &lt;a href=\&quot;https://link.zhihu.com/?target=http%3A//v.youku.com/v_show/id_XMzYyOTIxMTI4.html%3Ffrom%3Dy1.7-2\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;台球1—在线播放&lt;/a&gt;&quot;,&quot;commentCount&quot;:55,&quot;extras&quot;:&quot;&quot;,&quot;reshipmentSettings&quot;:&quot;allowed&quot;,&quot;rewardInfo&quot;:{&quot;rewardMemberCount&quot;:0,&quot;isRewardable&quot;:false,&quot;rewardTotalMoney&quot;:0,&quot;canOpenReward&quot;:false,&quot;tagline&quot;:&quot;&quot;},&quot;isCopyable&quot;:true,&quot;type&quot;:&quot;answer&quot;,&quot;thumbnail&quot;:&quot;https://pic2.zhimg.com/7405939b62a73f28846533de08db3a80_200x112.jpg&quot;,&quot;isNormal&quot;:true}},&quot;articles&quot;:{},&quot;columns&quot;:{},&quot;topics&quot;:{},&quot;roundtables&quot;:{},&quot;favlists&quot;:{},&quot;comments&quot;:{},&quot;notifications&quot;:{},&quot;ebooks&quot;:{},&quot;activities&quot;:{},&quot;feeds&quot;:{},&quot;pins&quot;:{},&quot;promotions&quot;:{}},&quot;currentUser&quot;:&quot;&quot;,&quot;token&quot;:{&quot;xsrf&quot;:&quot;645d7ff2-c870-47ba-959a-55e15f84aa3a&quot;,&quot;xUDID&quot;:&quot;AHArnMK0Bw2PTkRkutFs0XuRJ0uasdy6zBQ=&quot;},&quot;account&quot;:{&quot;lockLevel&quot;:{},&quot;locakTicketStatus&quot;:false,&quot;challenge&quot;:[],&quot;errorStatus&quot;:false,&quot;message&quot;:&quot;&quot;,&quot;isFetching&quot;:false},&quot;notification&quot;:{},&quot;people&quot;:{&quot;profileStatus&quot;:{},&quot;isFetching&quot;:false,&quot;activitiesByUser&quot;:{},&quot;answersByUser&quot;:{},&quot;answersSortByVotesByUser&quot;:{},&quot;answersIncludedByUser&quot;:{},&quot;votedAnswersByUser&quot;:{},&quot;thankedAnswersByUser&quot;:{},&quot;voteAnswersByUser&quot;:{},&quot;thankAnswersByUser&quot;:{},&quot;topicAnswersByUser&quot;:{},&quot;articlesByUser&quot;:{},&quot;articlesSortByVotesByUser&quot;:{},&quot;articlesIncludedByUser&quot;:{},&quot;pinsByUser&quot;:{},&quot;questionsByUser&quot;:{},&quot;commercialQuestionsByUser&quot;:{},&quot;favlistsByUser&quot;:{},&quot;followingByUser&quot;:{},&quot;followersByUser&quot;:{},&quot;mutualsByUser&quot;:{},&quot;followingColumnsByUser&quot;:{},&quot;followingQuestionsByUser&quot;:{},&quot;followingFavlistsByUser&quot;:{},&quot;followingTopicsByUser&quot;:{},&quot;publicationsByUser&quot;:{},&quot;columnsByUser&quot;:{},&quot;allFavlistsByUser&quot;:{},&quot;brands&quot;:null},&quot;env&quot;:{&quot;experiment&quot;:{&quot;ge3&quot;:&quot;ge3_9&quot;,&quot;ge2&quot;:&quot;ge2_1&quot;,&quot;growthSearch&quot;:&quot;s1&quot;,&quot;nwebQAGrowth&quot;:&quot;experiment&quot;,&quot;qawebRelatedReadingsContentControl&quot;:&quot;close&quot;,&quot;qawebThumbnailAbtest&quot;:&quot;new&quot;,&quot;nwebSearch&quot;:&quot;nweb_search_heifetz&quot;,&quot;enableVoteDownReasonMenu&quot;:&quot;enable&quot;,&quot;showVideoUploadAttention&quot;:&quot;true&quot;,&quot;isOffice&quot;:&quot;false&quot;,&quot;enableTtsPlay&quot;:&quot;post&quot;,&quot;newQuestionDiversion&quot;:&quot;true&quot;,&quot;wechatShareModal&quot;:&quot;wechat_share_modal_show&quot;,&quot;newLiveFeedMediacard&quot;:&quot;old&quot;,&quot;androidPassThroughPush&quot;:&quot;all&quot;,&quot;hybridZhmoreVideo&quot;:&quot;no&quot;,&quot;nwebGrowthPeople&quot;:&quot;default&quot;,&quot;nwebSearchSuggest&quot;:&quot;default&quot;,&quot;qrcodeLogin&quot;:&quot;qrcode&quot;,&quot;seE&quot;:&quot;0&quot;,&quot;androidDbFollowRecommendHide&quot;:&quot;open&quot;,&quot;isShowUnicomFreeEntry&quot;:&quot;unicom_free_entry_off&quot;,&quot;newMobileColumnAppheader&quot;:&quot;new_header&quot;,&quot;androidDbCommentWithRepinRecord&quot;:&quot;open&quot;,&quot;feedHybridTopicRecomButtonIcon&quot;:&quot;yes&quot;,&quot;androidDbRecommendAction&quot;:&quot;open&quot;,&quot;zcmLighting&quot;:&quot;zcm&quot;,&quot;androidDbFeedHashTagStyle&quot;:&quot;button&quot;,&quot;appStoreRateDialog&quot;:&quot;close&quot;,&quot;topWeightSearch&quot;:&quot;new_top_search&quot;,&quot;default&quot;:&quot;None&quot;,&quot;isNewNotiPanel&quot;:&quot;no&quot;,&quot;androidDbRepinSelection&quot;:&quot;open&quot;,&quot;growthBanner&quot;:&quot;default&quot;,&quot;androidProfilePanel&quot;:&quot;panel_b&quot;},&quot;experimentOrigin&quot;:{&quot;ge3&quot;:&quot;ge3_9&quot;,&quot;ge2&quot;:&quot;ge2_1&quot;,&quot;growth_search&quot;:&quot;s1&quot;,&quot;nwebQAGrowth&quot;:&quot;experiment&quot;,&quot;qaweb_related_readings_content_control&quot;:&quot;close&quot;,&quot;qaweb_thumbnail_abtest&quot;:&quot;new&quot;,&quot;nweb_search&quot;:&quot;nweb_search_heifetz&quot;,&quot;enable_vote_down_reason_menu&quot;:&quot;enable&quot;,&quot;show_video_upload_attention&quot;:&quot;true&quot;,&quot;is_office&quot;:&quot;false&quot;,&quot;enable_tts_play&quot;:&quot;post&quot;,&quot;new_question_diversion&quot;:&quot;true&quot;,&quot;wechat_share_modal&quot;:&quot;wechat_share_modal_show&quot;,&quot;new_live_feed_mediacard&quot;:&quot;old&quot;,&quot;android_pass_through_push&quot;:&quot;all&quot;,&quot;hybrid_zhmore_video&quot;:&quot;no&quot;,&quot;nweb_growth_people&quot;:&quot;default&quot;,&quot;nweb_search_suggest&quot;:&quot;default&quot;,&quot;qrcode_login&quot;:&quot;qrcode&quot;,&quot;se_e&quot;:&quot;0&quot;,&quot;android_db_follow_recommend_hide&quot;:&quot;open&quot;,&quot;is_show_unicom_free_entry&quot;:&quot;unicom_free_entry_off&quot;,&quot;new_mobile_column_appheader&quot;:&quot;new_header&quot;,&quot;android_db_comment_with_repin_record&quot;:&quot;open&quot;,&quot;feed_hybrid_topic_recom_button_icon&quot;:&quot;yes&quot;,&quot;android_db_recommend_action&quot;:&quot;open&quot;,&quot;zcm-lighting&quot;:&quot;zcm&quot;,&quot;android_db_feed_hash_tag_style&quot;:&quot;button&quot;,&quot;app_store_rate_dialog&quot;:&quot;close&quot;,&quot;top_weight_search&quot;:&quot;new_top_search&quot;,&quot;default&quot;:&quot;None&quot;,&quot;is_new_noti_panel&quot;:&quot;no&quot;,&quot;android_db_repin_selection&quot;:&quot;open&quot;,&quot;growth_banner&quot;:&quot;default&quot;,&quot;android_profile_panel&quot;:&quot;panel_b&quot;},&quot;userAgent&quot;:{&quot;Edge&quot;:false,&quot;Wechat&quot;:false,&quot;Weibo&quot;:false,&quot;QQ&quot;:false,&quot;Mobile&quot;:false,&quot;Android&quot;:false,&quot;iOS&quot;:false,&quot;isAppleDevice&quot;:false,&quot;Zhihu&quot;:false,&quot;ZhihuHybrid&quot;:false,&quot;isBot&quot;:false,&quot;Tablet&quot;:false,&quot;isWebView&quot;:false,&quot;origin&quot;:&quot;Wget/1.18 (linux-gnu)&quot;},&quot;trafficSource&quot;:&quot;production&quot;,&quot;edition&quot;:{&quot;baidu&quot;:false,&quot;yidianzixun&quot;:false},&quot;theme&quot;:&quot;light&quot;,&quot;referer&quot;:&quot;&quot;,&quot;conf&quot;:{&quot;unblockContacts&quot;:{&quot;mobile&quot;:&quot;1069 02098 21212&quot;,&quot;telecom&quot;:&quot;1069 0920 21212&quot;,&quot;unicom&quot;:&quot;1069 0920 21212&quot;}},&quot;ipInfo&quot;:{}},&quot;config&quot;:{&quot;isWindow&quot;:0,&quot;canWrite&quot;:false,&quot;alertTimeSpan&quot;:3600,&quot;tip&quot;:&quot;应国家法规对于帐号实名的要求，进行下一步操作前，需要先完成手机绑定。&quot;},&quot;comments&quot;:{&quot;pagination&quot;:{},&quot;collapsed&quot;:{},&quot;reverse&quot;:{},&quot;reviewing&quot;:{},&quot;conversation&quot;:{},&quot;parent&quot;:{}},&quot;pushNotifications&quot;:{&quot;default&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;ids&quot;:[]},&quot;follow&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;ids&quot;:[]},&quot;vote-thank&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;ids&quot;:[]},&quot;currentTab&quot;:&quot;default&quot;,&quot;notificationsCount&quot;:{&quot;default&quot;:0,&quot;follow&quot;:0,&quot;vote-thank&quot;:0}},&quot;messages&quot;:{&quot;data&quot;:{},&quot;currentTab&quot;:&quot;common&quot;,&quot;messageCount&quot;:0},&quot;register&quot;:{&quot;registerValidateSucceeded&quot;:null,&quot;registerValidateErrors&quot;:{},&quot;registerConfirmError&quot;:null,&quot;sendDigitsError&quot;:null,&quot;registerConfirmSucceeded&quot;:null},&quot;login&quot;:{&quot;loginUnregisteredError&quot;:false,&quot;loginBindWechatError&quot;:false,&quot;loginConfirmError&quot;:null,&quot;sendDigitsError&quot;:null,&quot;validateDigitsError&quot;:false,&quot;loginConfirmSucceeded&quot;:null,&quot;qrcodeLoginToken&quot;:&quot;&quot;,&quot;qrcodeLoginScanStatus&quot;:0,&quot;qrcodeLoginError&quot;:null,&quot;qrcodeLoginReturnNewToken&quot;:false},&quot;active&quot;:{&quot;sendDigitsError&quot;:null,&quot;activeConfirmSucceeded&quot;:null,&quot;activeConfirmError&quot;:null},&quot;coupon&quot;:{&quot;isRedeemingCoupon&quot;:false},&quot;question&quot;:{&quot;followers&quot;:{},&quot;concernedFollowers&quot;:{},&quot;answers&quot;:{&quot;28557115&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;ids&quot;:[48094438,41265890,41267240],&quot;newIds&quot;:[48094438,41265890,41267240],&quot;totals&quot;:50,&quot;isPrevDrained&quot;:true,&quot;previous&quot;:&quot;http://www.zhihu.com/api/v4/questions/28557115/answers?sort_by=default&amp;include=data%5B%2A%5D.is_normal%2Cadmin_closed_comment%2Creward_info%2Cis_collapsed%2Cannotation_action%2Cannotation_detail%2Ccollapse_reason%2Cis_sticky%2Ccollapsed_by%2Csuggest_edit%2Ccomment_count%2Ccan_comment%2Ccontent%2Ceditable_content%2Cvoteup_count%2Creshipment_settings%2Ccomment_permission%2Ccreated_time%2Cupdated_time%2Creview_info%2Crelevant_info%2Cquestion%2Cexcerpt%2Crelationship.is_authorized%2Cis_author%2Cvoting%2Cis_thanked%2Cis_nothelp%2Cupvoted_followees%3Bdata%5B%2A%5D.mark_infos%5B%2A%5D.url%3Bdata%5B%2A%5D.author.follower_count%2Cbadge%5B%3F%28type%3Dbest_answerer%29%5D.topics&amp;limit=3&amp;offset=0&quot;,&quot;next&quot;:&quot;http://www.zhihu.com/api/v4/questions/28557115/answers?sort_by=default&amp;include=data%5B%2A%5D.is_normal%2Cadmin_closed_comment%2Creward_info%2Cis_collapsed%2Cannotation_action%2Cannotation_detail%2Ccollapse_reason%2Cis_sticky%2Ccollapsed_by%2Csuggest_edit%2Ccomment_count%2Ccan_comment%2Ccontent%2Ceditable_content%2Cvoteup_count%2Creshipment_settings%2Ccomment_permission%2Ccreated_time%2Cupdated_time%2Creview_info%2Crelevant_info%2Cquestion%2Cexcerpt%2Crelationship.is_authorized%2Cis_author%2Cvoting%2Cis_thanked%2Cis_nothelp%2Cupvoted_followees%3Bdata%5B%2A%5D.mark_infos%5B%2A%5D.url%3Bdata%5B%2A%5D.author.follower_count%2Cbadge%5B%3F%28type%3Dbest_answerer%29%5D.topics&amp;limit=3&amp;offset=3&quot;}},&quot;hiddenAnswers&quot;:{},&quot;createdAnswers&quot;:{},&quot;collapsedAnswers&quot;:{},&quot;notificationAnswers&quot;:{},&quot;invitationCandidates&quot;:{},&quot;inviters&quot;:{},&quot;invitees&quot;:{},&quot;similarQuestions&quot;:{},&quot;relatedCommodities&quot;:{},&quot;recommendReadings&quot;:{},&quot;bio&quot;:{},&quot;brand&quot;:{},&quot;permission&quot;:{},&quot;advancedStyle&quot;:{},&quot;commonAnswerCount&quot;:0,&quot;hiddenAnswerCount&quot;:0,&quot;meta&quot;:{},&quot;autoInvitation&quot;:{}},&quot;shareTexts&quot;:{},&quot;answers&quot;:{&quot;voters&quot;:{},&quot;copyrightApplicants&quot;:{},&quot;favlists&quot;:{},&quot;newAnswer&quot;:{},&quot;concernedUpvoters&quot;:{}},&quot;banner&quot;:{},&quot;topic&quot;:{&quot;bios&quot;:{},&quot;hot&quot;:{},&quot;newest&quot;:{},&quot;top&quot;:{},&quot;unanswered&quot;:{},&quot;questions&quot;:{},&quot;followers&quot;:{},&quot;parent&quot;:{},&quot;children&quot;:{},&quot;bestAnswerers&quot;:{},&quot;index&quot;:{},&quot;intro&quot;:{}},&quot;captcha&quot;:{&quot;captchaNeeded&quot;:false,&quot;captchaValidated&quot;:false,&quot;captchaBase64String&quot;:null,&quot;captchaValidationMessage&quot;:null,&quot;loginCaptchaExpires&quot;:false},&quot;sms&quot;:{&quot;supportedCountries&quot;:[]},&quot;explore&quot;:{&quot;recommendations&quot;:{},&quot;hotfeeds&quot;:{}},&quot;articles&quot;:{&quot;voters&quot;:{}},&quot;favlists&quot;:{&quot;relations&quot;:{}},&quot;pins&quot;:{&quot;voters&quot;:{}},&quot;topstory&quot;:{&quot;topstorys&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;afterId&quot;:0,&quot;items&quot;:[],&quot;next&quot;:null},&quot;sidebar&quot;:null,&quot;announcement&quot;:{},&quot;hotList&quot;:[]},&quot;upload&quot;:{},&quot;video&quot;:{&quot;data&quot;:{}},&quot;guide&quot;:{&quot;guide&quot;:{&quot;isFetching&quot;:false,&quot;isShowGuide&quot;:false}},&quot;switches&quot;:{},&quot;reward&quot;:{&quot;answer&quot;:{},&quot;article&quot;:{},&quot;question&quot;:{}},&quot;search&quot;:{&quot;recommendSearch&quot;:[],&quot;topSearch&quot;:{},&quot;attachedInfo&quot;:{},&quot;nextOffset&quot;:{},&quot;generalByQuery&quot;:{},&quot;generalByQueryInADay&quot;:{},&quot;generalByQueryInAWeek&quot;:{},&quot;generalByQueryInThreeMonths&quot;:{},&quot;peopleByQuery&quot;:{},&quot;topicByQuery&quot;:{},&quot;columnByQuery&quot;:{},&quot;liveByQuery&quot;:{},&quot;albumByQuery&quot;:{},&quot;eBookByQuery&quot;:{}}}" data-config="{&quot;apiAddress&quot;:&quot;/api/v4/&quot;,&quot;deployEnv&quot;:&quot;production&quot;}"></div><script src="https://static.zhihu.com/heifetz/vendor.72d10fe31301a0517a94.js"></script><script src="https://static.zhihu.com/heifetz/main.raven.de528ec8554f519c4b0a.js" async=""></script><script src="https://static.zhihu.com/heifetz/main.app.f03ea18a99439fba4c97.js"></script><script></script></body></html>